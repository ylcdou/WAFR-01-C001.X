

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Thu Oct 08 11:59:22 2015

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F2420
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1
    30                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    31                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    32                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    33                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    34                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    35  0000                     _ADCON0	set	4034
    36  0000                     _ADCON0bits	set	4034
    37  0000                     _ADCON1bits	set	4033
    38  0000                     _ADCON2bits	set	4032
    39  0000                     _ADRESH	set	4036
    40  0000                     _ADRESL	set	4035
    41  0000                     _EEADR	set	4009
    42  0000                     _EECON1bits	set	4006
    43  0000                     _EECON2	set	4007
    44  0000                     _EEDATA	set	4008
    45  0000                     _INTCON2bits	set	4081
    46  0000                     _INTCONbits	set	4082
    47  0000                     _PIR1bits	set	3998
    48  0000                     _PORTBbits	set	3969
    49  0000                     _PORTC	set	3970
    50  0000                     _PORTCbits	set	3970
    51  0000                     _T0CONbits	set	4053
    52  0000                     _TMR0H	set	4055
    53  0000                     _TMR0L	set	4054
    54  0000                     _TRISAbits	set	3986
    55  0000                     _TRISBbits	set	3987
    56  0000                     _TRISCbits	set	3988
    57                           
    58                           ; #config settings
    59  0000                     
    60                           	psect	cinit
    61  000A50                     __pcinit:
    62                           	opt stack 0
    63  000A50                     start_initialization:
    64                           	opt stack 0
    65  000A50                     __initialization:
    66                           	opt stack 0
    67                           
    68                           ; Clear objects allocated to COMRAM (64 bytes)
    69  000A50  EE00  F001         	lfsr	0,__pbssCOMRAM
    70  000A54  0E40               	movlw	64
    71  000A56                     clear_0:
    72  000A56  6AEE               	clrf	postinc0,c
    73  000A58  06E8               	decf	wreg,f,c
    74  000A5A  E1FD               	bnz	clear_0
    75  000A5C                     end_of_initialization:
    76                           	opt stack 0
    77  000A5C                     __end_of__initialization:
    78                           	opt stack 0
    79  000A5C  9069               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    80  000A5E  9269               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    81  000A60  0E00               	movlw	low (__Lmediumconst shr (0+16))
    82  000A62  6EF8               	movwf	tblptru,c
    83  000A64  0100               	movlb	0
    84  000A66  EF4F  F001         	goto	_main	;jump to C main() function
    85                           tblptru	equ	0xFF8
    86                           postinc0	equ	0xFEE
    87                           wreg	equ	0xFE8
    88                           
    89                           	psect	bssCOMRAM
    90  000001                     __pbssCOMRAM:
    91                           	opt stack 0
    92  000001                     _adcAD597Value:
    93                           	opt stack 0
    94  000001                     	ds	20
    95  000015                     _adcBatValue:
    96                           	opt stack 0
    97  000015                     	ds	20
    98  000029                     _buttonPushTimeStart:
    99                           	opt stack 0
   100  000029                     	ds	4
   101  00002D                     _buttonPushTimeStop:
   102                           	opt stack 0
   103  00002D                     	ds	4
   104  000031                     _pushButtonJitterTime:
   105                           	opt stack 0
   106  000031                     	ds	4
   107  000035                     _timeSystemRun:
   108                           	opt stack 0
   109  000035                     	ds	4
   110  000039                     _timerHalfSecond:
   111                           	opt stack 0
   112  000039                     	ds	2
   113  00003B                     _S2KeyPushTime:
   114                           	opt stack 0
   115  00003B                     	ds	1
   116  00003C                     _cyData:
   117                           	opt stack 0
   118  00003C                     	ds	1
   119  00003D                     _flagS2KeyPushed:
   120                           	opt stack 0
   121  00003D                     	ds	1
   122  00003E                     _levelTmpSetting:
   123                           	opt stack 0
   124  00003E                     	ds	1
   125  00003F                     _timer0Count:
   126                           	opt stack 0
   127  00003F                     	ds	1
   128  000040                     _timer1Count:
   129                           	opt stack 0
   130  000040                     	ds	1
   131                           tblptru	equ	0xFF8
   132                           postinc0	equ	0xFEE
   133                           wreg	equ	0xFE8
   134                           
   135                           	psect	cstackBANK0
   136  000080                     __pcstackBANK0:
   137                           	opt stack 0
   138  000080                     ??_ProcessHeat:
   139                           
   140                           ; 0 bytes @ 0x0
   141  000080                     	ds	4
   142  000084                     ProcessHeat@flagStop:
   143                           	opt stack 0
   144                           
   145                           ; 1 bytes @ 0x4
   146  000084                     	ds	1
   147  000085                     ProcessHeat@countHeatTime:
   148                           	opt stack 0
   149                           
   150                           ; 4 bytes @ 0x5
   151  000085                     	ds	4
   152  000089                     ProcessHeat@adcValue:
   153                           	opt stack 0
   154                           
   155                           ; 2 bytes @ 0x9
   156  000089                     	ds	2
   157  00008B                     
   158                           ; 2 bytes @ 0xB
   159  00008B                     	ds	2
   160  00008D                     
   161                           ; 3 bytes @ 0xD
   162  00008D                     	ds	3
   163  000090                     main@keyValue:
   164                           	opt stack 0
   165                           
   166                           ; 1 bytes @ 0x10
   167  000090                     	ds	1
   168  000091                     main@adcValue:
   169                           	opt stack 0
   170                           
   171                           ; 2 bytes @ 0x11
   172  000091                     	ds	2
   173  000093                     main@i:
   174                           	opt stack 0
   175                           
   176                           ; 2 bytes @ 0x13
   177  000093                     	ds	2
   178                           tblptru	equ	0xFF8
   179                           postinc0	equ	0xFEE
   180                           wreg	equ	0xFE8
   181                           
   182                           	psect	cstackCOMRAM
   183  000041                     __pcstackCOMRAM:
   184                           	opt stack 0
   185  000041                     ??_ISR:
   186  000041                     
   187                           ; 1 bytes @ 0x0
   188  000041                     	ds	22
   189  000057                     ??_ProcessButton:
   190  000057                     ?___lwdiv:
   191                           	opt stack 0
   192  000057                     WriteEEprom@data:
   193                           	opt stack 0
   194  000057                     ReadEEprom@addr:
   195                           	opt stack 0
   196  000057                     delay_ms@x:
   197                           	opt stack 0
   198  000057                     delay_10us@i:
   199                           	opt stack 0
   200  000057                     ___lwdiv@dividend:
   201                           	opt stack 0
   202                           
   203                           ; 2 bytes @ 0x16
   204  000057                     	ds	1
   205  000058                     WriteEEprom@addr:
   206                           	opt stack 0
   207                           
   208                           ; 1 bytes @ 0x17
   209  000058                     	ds	1
   210  000059                     ?_AD_Converter:
   211                           	opt stack 0
   212  000059                     delay_ms@j:
   213                           	opt stack 0
   214  000059                     ___lwdiv@divisor:
   215                           	opt stack 0
   216                           
   217                           ; 2 bytes @ 0x18
   218  000059                     	ds	2
   219  00005B                     ??_AD_Converter:
   220  00005B                     ___lwdiv@counter:
   221                           	opt stack 0
   222  00005B                     delay_ms@i:
   223                           	opt stack 0
   224  00005B                     ProcessButton@buttonPushPeriod:
   225                           	opt stack 0
   226                           
   227                           ; 4 bytes @ 0x1A
   228  00005B                     	ds	1
   229  00005C                     ___lwdiv@quotient:
   230                           	opt stack 0
   231                           
   232                           ; 2 bytes @ 0x1B
   233  00005C                     	ds	1
   234  00005D                     ??_ShutDownSystem:
   235  00005D                     AD_Converter@channelNumber:
   236                           	opt stack 0
   237                           
   238                           ; 1 bytes @ 0x1C
   239  00005D                     	ds	1
   240  00005E                     AD_Converter@AD_Result:
   241                           	opt stack 0
   242                           
   243                           ; 2 bytes @ 0x1D
   244  00005E                     	ds	2
   245  000060                     ?_GetAdcBatValue:
   246                           	opt stack 0
   247  000060                     ?_GetAdcAD597Value:
   248                           	opt stack 0
   249                           
   250                           ; 2 bytes @ 0x1F
   251  000060                     	ds	2
   252  000062                     ??_GetAdcBatValue:
   253  000062                     ??_GetAdcAD597Value:
   254                           
   255                           ; 0 bytes @ 0x21
   256  000062                     	ds	2
   257  000064                     GetAdcBatValue@channelNumber:
   258                           	opt stack 0
   259  000064                     GetAdcAD597Value@channelNumber:
   260                           	opt stack 0
   261                           
   262                           ; 1 bytes @ 0x23
   263  000064                     	ds	1
   264  000065                     GetAdcBatValue@temp:
   265                           	opt stack 0
   266  000065                     GetAdcAD597Value@temp:
   267                           	opt stack 0
   268                           
   269                           ; 2 bytes @ 0x24
   270  000065                     	ds	2
   271  000067                     GetAdcBatValue@i:
   272                           	opt stack 0
   273  000067                     GetAdcAD597Value@i:
   274                           	opt stack 0
   275                           
   276                           ; 1 bytes @ 0x26
   277  000067                     	ds	1
   278  000068                     ??_main:
   279                           
   280                           ; 0 bytes @ 0x27
   281  000068                     	ds	1
   282                           tblptru	equ	0xFF8
   283                           postinc0	equ	0xFEE
   284                           wreg	equ	0xFE8
   285                           
   286 ;;
   287 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   288 ;;
   289 ;; *************** function _main *****************
   290 ;; Defined at:
   291 ;;		line 33 in file "WAFR-01-C001 HD-debug.X/WAFR-01-C001-HD-debug main/WAFR-01-C001-HD-debug-main.c"
   292 ;; Parameters:    Size  Location     Type
   293 ;;  argc            2   11[BANK0 ] int 
   294 ;;  argv            3   13[BANK0 ] PTR PTR unsigned char 
   295 ;; Auto vars:     Size  Location     Type
   296 ;;  i               2   19[BANK0 ] unsigned int 
   297 ;;  adcValue        2   17[BANK0 ] short 
   298 ;;  keyValue        1   16[BANK0 ] char 
   299 ;; Return value:  Size  Location     Type
   300 ;;                  2   11[BANK0 ] int 
   301 ;; Registers used:
   302 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   303 ;; Tracked objects:
   304 ;;		On entry : 0/0
   305 ;;		On exit  : 0/0
   306 ;;		Unchanged: 0/0
   307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   308 ;;      Params:         0       5       0       0
   309 ;;      Locals:         0       5       0       0
   310 ;;      Temps:          1       0       0       0
   311 ;;      Totals:         1      10       0       0
   312 ;;Total ram usage:       11 bytes
   313 ;; Hardware stack levels required when called:    5
   314 ;; This function calls:
   315 ;;		_GetAdcBatValue
   316 ;;		_InitializeAD
   317 ;;		_InitializeINT0
   318 ;;		_InitializeInterrupts
   319 ;;		_InitializeOscillator
   320 ;;		_InitializePinmux
   321 ;;		_InitializeTimer0
   322 ;;		_LevelTmpSetShow
   323 ;;		_ProcessButton
   324 ;;		_ProcessHeat
   325 ;;		_ReadEEprom
   326 ;;		_ShutDownSystem
   327 ;;		_delay_ms
   328 ;;		_turnOffAllLed
   329 ;; This function is called by:
   330 ;;		Startup code after reset
   331 ;; This function uses a non-reentrant model
   332 ;;
   333                           
   334                           	psect	text0
   335  00029E                     __ptext0:
   336                           	opt stack 0
   337  00029E                     _main:
   338                           	opt stack 26
   339                           
   340                           ;WAFR-01-C001-HD-debug-main.c: 35: unsigned int i;
   341                           ;WAFR-01-C001-HD-debug-main.c: 36: int8 keyValue;
   342                           ;WAFR-01-C001-HD-debug-main.c: 40: int16 adcValue;
   343                           ;WAFR-01-C001-HD-debug-main.c: 43: InitializeOscillator();
   344                           
   345                           ;incstack = 0
   346  00029E  EC58  F005         	call	_InitializeOscillator	;wreg free
   347                           
   348                           ;WAFR-01-C001-HD-debug-main.c: 45: InitializePinmux();
   349  0002A2  ECF7  F004         	call	_InitializePinmux	;wreg free
   350                           
   351                           ;WAFR-01-C001-HD-debug-main.c: 47: PORTBbits.RB2 = 1;
   352  0002A6  8481               	bsf	3969,2,c	;volatile
   353                           
   354                           ;WAFR-01-C001-HD-debug-main.c: 56: InitializeInterrupts();
   355  0002A8  EC50  F005         	call	_InitializeInterrupts	;wreg free
   356                           
   357                           ;WAFR-01-C001-HD-debug-main.c: 58: InitializeTimer0();
   358  0002AC  EC35  F005         	call	_InitializeTimer0	;wreg free
   359                           
   360                           ;WAFR-01-C001-HD-debug-main.c: 60: InitializeINT0();
   361  0002B0  EC54  F005         	call	_InitializeINT0	;wreg free
   362                           
   363                           ;WAFR-01-C001-HD-debug-main.c: 64: InitializeAD();
   364  0002B4  EC0B  F005         	call	_InitializeAD	;wreg free
   365                           
   366                           ;WAFR-01-C001-HD-debug-main.c: 66: turnOffAllLed();
   367  0002B8  EC4C  F005         	call	_turnOffAllLed	;wreg free
   368                           
   369                           ;WAFR-01-C001-HD-debug-main.c: 69: PORTBbits.RB1 = 0 ;
   370  0002BC  9281               	bcf	3969,1,c	;volatile
   371                           
   372                           ;WAFR-01-C001-HD-debug-main.c: 75: while ( !PORTBbits.RB0 )
   373  0002BE  D01E               	goto	l2232
   374  0002C0                     l2228:
   375                           
   376                           ;WAFR-01-C001-HD-debug-main.c: 76: {
   377                           ;WAFR-01-C001-HD-debug-main.c: 77: PORTCbits.RC0 = ! PORTCbits.RC0 ;
   378  0002C0  B082               	btfsc	3970,0,c	;volatile
   379  0002C2  D003               	goto	u1680
   380  0002C4  6A68               	clrf	??_main& (0+255),c
   381  0002C6  2A68               	incf	??_main& (0+255),f,c
   382  0002C8  D001               	goto	u1698
   383  0002CA                     u1680:
   384  0002CA  6A68               	clrf	??_main& (0+255),c
   385  0002CC                     u1698:
   386  0002CC  5082               	movf	3970,w,c	;volatile
   387  0002CE  1868               	xorwf	??_main,w,c
   388  0002D0  0BFE               	andlw	-2
   389  0002D2  1868               	xorwf	??_main,w,c
   390  0002D4  6E82               	movwf	3970,c	;volatile
   391                           
   392                           ;WAFR-01-C001-HD-debug-main.c: 78: PORTCbits.RC2 = ! PORTCbits.RC2;
   393  0002D6  B482               	btfsc	3970,2,c	;volatile
   394  0002D8  D003               	goto	u1700
   395  0002DA  6A68               	clrf	??_main& (0+255),c
   396  0002DC  2A68               	incf	??_main& (0+255),f,c
   397  0002DE  D001               	goto	u1718
   398  0002E0                     u1700:
   399  0002E0  6A68               	clrf	??_main& (0+255),c
   400  0002E2                     u1718:
   401  0002E2  4668               	rlncf	??_main,f,c
   402  0002E4  4668               	rlncf	??_main,f,c
   403  0002E6  5082               	movf	3970,w,c	;volatile
   404  0002E8  1868               	xorwf	??_main,w,c
   405  0002EA  0BFB               	andlw	-5
   406  0002EC  1868               	xorwf	??_main,w,c
   407  0002EE  6E82               	movwf	3970,c	;volatile
   408                           
   409                           ;WAFR-01-C001-HD-debug-main.c: 79: delay_ms(80);
   410  0002F0  0E00               	movlw	0
   411  0002F2  6E58               	movwf	delay_ms@x+1,c
   412  0002F4  0E50               	movlw	80
   413  0002F6  6E57               	movwf	delay_ms@x,c
   414  0002F8  ECC8  F004         	call	_delay_ms	;wreg free
   415  0002FC                     l2232:
   416  0002FC  A081               	btfss	3969,0,c	;volatile
   417  0002FE  D7E0               	goto	l2228
   418                           
   419                           ;WAFR-01-C001-HD-debug-main.c: 80: }
   420                           ;WAFR-01-C001-HD-debug-main.c: 81: PORTCbits.RC0 = 0 ;
   421  000300  9082               	bcf	3970,0,c	;volatile
   422                           
   423                           ;WAFR-01-C001-HD-debug-main.c: 84: timeSystemRun = 0 ;
   424  000302  0E00               	movlw	0
   425  000304  6E35               	movwf	_timeSystemRun,c
   426  000306  0E00               	movlw	0
   427  000308  6E36               	movwf	_timeSystemRun+1,c
   428  00030A  0E00               	movlw	0
   429  00030C  6E37               	movwf	_timeSystemRun+2,c
   430  00030E  0E00               	movlw	0
   431  000310  6E38               	movwf	_timeSystemRun+3,c
   432                           
   433                           ;WAFR-01-C001-HD-debug-main.c: 90: for ( i = 0 ; i < 10 ; i++)
   434  000312  0E00               	movlw	0
   435  000314  0100               	movlb	0	; () banked
   436  000316  6F94               	movwf	(main@i+1)& (0+255),b
   437  000318  0E00               	movlw	0
   438  00031A  6F93               	movwf	main@i& (0+255),b
   439  00031C                     l2236:
   440                           
   441                           ; BSR set to: 0
   442  00031C  0100               	movlb	0	; () banked
   443  00031E  5194               	movf	(main@i+1)& (0+255),w,b
   444  000320  E127               	bnz	l2246
   445  000322  0E0A               	movlw	10
   446  000324  0100               	movlb	0	; () banked
   447  000326  5D93               	subwf	main@i& (0+255),w,b
   448  000328  B0D8               	btfsc	status,0,c
   449  00032A  D022               	goto	l2246
   450                           
   451                           ; BSR set to: 0
   452                           ;WAFR-01-C001-HD-debug-main.c: 91: {
   453                           ;WAFR-01-C001-HD-debug-main.c: 92: adcBatValue[i] = 816 ;
   454                           
   455                           ; BSR set to: 0
   456                           
   457                           ; BSR set to: 0
   458  00032C  90D8               	bcf	status,0,c
   459  00032E  0100               	movlb	0	; () banked
   460  000330  3593               	rlcf	main@i& (0+255),w,b
   461  000332  6ED9               	movwf	fsr2l,c
   462  000334  0100               	movlb	0	; () banked
   463  000336  3594               	rlcf	(main@i+1)& (0+255),w,b
   464  000338  6EDA               	movwf	fsr2h,c
   465  00033A  0E15               	movlw	low _adcBatValue
   466  00033C  26D9               	addwf	fsr2l,f,c
   467  00033E  0E00               	movlw	high _adcBatValue
   468  000340  22DA               	addwfc	fsr2h,f,c
   469  000342  0E30               	movlw	48
   470  000344  6EDE               	movwf	postinc2,c
   471  000346  0E03               	movlw	3
   472  000348  6EDD               	movwf	postdec2,c
   473                           
   474                           ;WAFR-01-C001-HD-debug-main.c: 93: adcAD597Value[i] = 0 ;
   475  00034A  90D8               	bcf	status,0,c
   476  00034C  0100               	movlb	0	; () banked
   477  00034E  3593               	rlcf	main@i& (0+255),w,b
   478  000350  6ED9               	movwf	fsr2l,c
   479  000352  0100               	movlb	0	; () banked
   480  000354  3594               	rlcf	(main@i+1)& (0+255),w,b
   481  000356  6EDA               	movwf	fsr2h,c
   482  000358  0E01               	movlw	low _adcAD597Value
   483  00035A  26D9               	addwf	fsr2l,f,c
   484  00035C  0E00               	movlw	high _adcAD597Value
   485  00035E  22DA               	addwfc	fsr2h,f,c
   486  000360  0E00               	movlw	0
   487  000362  6EDE               	movwf	postinc2,c
   488  000364  0E00               	movlw	0
   489  000366  6EDD               	movwf	postdec2,c
   490                           
   491                           ; BSR set to: 0
   492  000368  0100               	movlb	0	; () banked
   493  00036A  4B93               	infsnz	main@i& (0+255),f,b
   494  00036C  2B94               	incf	(main@i+1)& (0+255),f,b
   495  00036E  D7D6               	goto	l2236
   496  000370                     l2246:
   497                           
   498                           ; BSR set to: 0
   499                           ;WAFR-01-C001-HD-debug-main.c: 94: }
   500                           ;WAFR-01-C001-HD-debug-main.c: 97: buttonPushTimeStart = 0 ;
   501  000370  0E00               	movlw	0
   502  000372  6E29               	movwf	_buttonPushTimeStart,c
   503  000374  0E00               	movlw	0
   504  000376  6E2A               	movwf	_buttonPushTimeStart+1,c
   505  000378  0E00               	movlw	0
   506  00037A  6E2B               	movwf	_buttonPushTimeStart+2,c
   507  00037C  0E00               	movlw	0
   508  00037E  6E2C               	movwf	_buttonPushTimeStart+3,c
   509                           
   510                           ;WAFR-01-C001-HD-debug-main.c: 98: buttonPushTimeStop = 0 ;
   511  000380  0E00               	movlw	0
   512  000382  6E2D               	movwf	_buttonPushTimeStop,c
   513  000384  0E00               	movlw	0
   514  000386  6E2E               	movwf	_buttonPushTimeStop+1,c
   515  000388  0E00               	movlw	0
   516  00038A  6E2F               	movwf	_buttonPushTimeStop+2,c
   517  00038C  0E00               	movlw	0
   518  00038E  6E30               	movwf	_buttonPushTimeStop+3,c
   519                           
   520                           ;WAFR-01-C001-HD-debug-main.c: 103: while(timeSystemRun < 10 * 100)
   521  000390  D052               	goto	l2274
   522  000392                     l2248:
   523                           
   524                           ; BSR set to: 0
   525                           ;WAFR-01-C001-HD-debug-main.c: 104: {
   526                           ;WAFR-01-C001-HD-debug-main.c: 105: adcValue = GetAdcBatValue( 4 );
   527  000392  0E04               	movlw	4
   528  000394  EC3F  F003         	call	_GetAdcBatValue
   529  000398  C060  F091         	movff	?_GetAdcBatValue,main@adcValue
   530  00039C  C061  F092         	movff	?_GetAdcBatValue+1,main@adcValue+1
   531                           
   532                           ;WAFR-01-C001-HD-debug-main.c: 107: turnOffAllLed();
   533  0003A0  EC4C  F005         	call	_turnOffAllLed	;wreg free
   534                           
   535                           ;WAFR-01-C001-HD-debug-main.c: 108: if ( adcValue > 996)
   536  0003A4  0100               	movlb	0	; () banked
   537  0003A6  BF92               	btfsc	(main@adcValue+1)& (0+255),7,b
   538  0003A8  D00F               	goto	l2256
   539  0003AA  0EE5               	movlw	229
   540  0003AC  0100               	movlb	0	; () banked
   541  0003AE  5D91               	subwf	main@adcValue& (0+255),w,b
   542  0003B0  0E03               	movlw	3
   543  0003B2  0100               	movlb	0	; () banked
   544  0003B4  5992               	subwfb	(main@adcValue+1)& (0+255),w,b
   545  0003B6  A0D8               	btfss	status,0,c
   546  0003B8  D007               	goto	l2256
   547                           
   548                           ; BSR set to: 0
   549                           ;WAFR-01-C001-HD-debug-main.c: 109: {
   550                           ;WAFR-01-C001-HD-debug-main.c: 111: PORTCbits.RC0 = 1;
   551  0003BA  8082               	bsf	3970,0,c	;volatile
   552                           
   553                           ;WAFR-01-C001-HD-debug-main.c: 112: PORTCbits.RC1 = 1;
   554  0003BC  8282               	bsf	3970,1,c	;volatile
   555                           
   556                           ;WAFR-01-C001-HD-debug-main.c: 113: PORTCbits.RC3 = 1;
   557  0003BE  8682               	bsf	3970,3,c	;volatile
   558                           
   559                           ;WAFR-01-C001-HD-debug-main.c: 114: PORTCbits.RC4 = 1;
   560  0003C0  8882               	bsf	3970,4,c	;volatile
   561                           
   562                           ;WAFR-01-C001-HD-debug-main.c: 115: PORTCbits.RC6 = 1;
   563  0003C2  8C82               	bsf	3970,6,c	;volatile
   564                           
   565                           ;WAFR-01-C001-HD-debug-main.c: 116: PORTCbits.RC7 = 1;
   566  0003C4  8E82               	bsf	3970,7,c	;volatile
   567                           
   568                           ;WAFR-01-C001-HD-debug-main.c: 117: }else if ( adcValue > 891 )
   569  0003C6  D02E               	goto	l67
   570  0003C8                     l2256:
   571                           
   572                           ; BSR set to: 0
   573  0003C8  0100               	movlb	0	; () banked
   574  0003CA  BF92               	btfsc	(main@adcValue+1)& (0+255),7,b
   575  0003CC  D00D               	goto	l2260
   576  0003CE  0E7C               	movlw	124
   577  0003D0  0100               	movlb	0	; () banked
   578  0003D2  5D91               	subwf	main@adcValue& (0+255),w,b
   579  0003D4  0E03               	movlw	3
   580  0003D6  0100               	movlb	0	; () banked
   581  0003D8  5992               	subwfb	(main@adcValue+1)& (0+255),w,b
   582  0003DA  A0D8               	btfss	status,0,c
   583  0003DC  D005               	goto	l2260
   584                           
   585                           ; BSR set to: 0
   586                           ;WAFR-01-C001-HD-debug-main.c: 118: {
   587                           ;WAFR-01-C001-HD-debug-main.c: 119: PORTCbits.RC0 = 1;
   588  0003DE  8082               	bsf	3970,0,c	;volatile
   589                           
   590                           ;WAFR-01-C001-HD-debug-main.c: 120: PORTCbits.RC1 = 1;
   591  0003E0  8282               	bsf	3970,1,c	;volatile
   592                           
   593                           ;WAFR-01-C001-HD-debug-main.c: 121: PORTCbits.RC3 = 1;
   594  0003E2  8682               	bsf	3970,3,c	;volatile
   595                           
   596                           ;WAFR-01-C001-HD-debug-main.c: 122: PORTCbits.RC4 = 1;
   597  0003E4  8882               	bsf	3970,4,c	;volatile
   598                           
   599                           ;WAFR-01-C001-HD-debug-main.c: 123: }else if ( adcValue > 816)
   600  0003E6  D01E               	goto	l67
   601  0003E8                     l2260:
   602                           
   603                           ; BSR set to: 0
   604  0003E8  0100               	movlb	0	; () banked
   605  0003EA  BF92               	btfsc	(main@adcValue+1)& (0+255),7,b
   606  0003EC  D00B               	goto	l70
   607  0003EE  0E31               	movlw	49
   608  0003F0  0100               	movlb	0	; () banked
   609  0003F2  5D91               	subwf	main@adcValue& (0+255),w,b
   610  0003F4  0E03               	movlw	3
   611  0003F6  0100               	movlb	0	; () banked
   612  0003F8  5992               	subwfb	(main@adcValue+1)& (0+255),w,b
   613  0003FA  A0D8               	btfss	status,0,c
   614  0003FC  D003               	goto	l70
   615                           
   616                           ; BSR set to: 0
   617                           ;WAFR-01-C001-HD-debug-main.c: 124: {
   618                           ;WAFR-01-C001-HD-debug-main.c: 125: PORTCbits.RC0 = 1;
   619  0003FE  8082               	bsf	3970,0,c	;volatile
   620                           
   621                           ;WAFR-01-C001-HD-debug-main.c: 126: PORTCbits.RC1 = 1;
   622  000400  8282               	bsf	3970,1,c	;volatile
   623                           
   624                           ;WAFR-01-C001-HD-debug-main.c: 127: } else
   625  000402  D010               	goto	l67
   626  000404                     l70:
   627                           
   628                           ; BSR set to: 0
   629                           ;WAFR-01-C001-HD-debug-main.c: 128: {
   630                           ;WAFR-01-C001-HD-debug-main.c: 129: PORTCbits.RC0 = 1;
   631  000404  8082               	bsf	3970,0,c	;volatile
   632                           
   633                           ;WAFR-01-C001-HD-debug-main.c: 130: PORTCbits.RC1 = 1;
   634  000406  8282               	bsf	3970,1,c	;volatile
   635                           
   636                           ; BSR set to: 0
   637                           ;WAFR-01-C001-HD-debug-main.c: 131: delay_ms(100);
   638  000408  0E00               	movlw	0
   639  00040A  6E58               	movwf	delay_ms@x+1,c
   640  00040C  0E64               	movlw	100
   641  00040E  6E57               	movwf	delay_ms@x,c
   642  000410  ECC8  F004         	call	_delay_ms	;wreg free
   643                           
   644                           ;WAFR-01-C001-HD-debug-main.c: 132: PORTCbits.RC0 = 0;
   645  000414  9082               	bcf	3970,0,c	;volatile
   646                           
   647                           ;WAFR-01-C001-HD-debug-main.c: 133: PORTCbits.RC1 = 0;
   648  000416  9282               	bcf	3970,1,c	;volatile
   649                           
   650                           ;WAFR-01-C001-HD-debug-main.c: 134: delay_ms(100);
   651  000418  0E00               	movlw	0
   652  00041A  6E58               	movwf	delay_ms@x+1,c
   653  00041C  0E64               	movlw	100
   654  00041E  6E57               	movwf	delay_ms@x,c
   655  000420  ECC8  F004         	call	_delay_ms	;wreg free
   656  000424                     l67:
   657                           
   658                           ;WAFR-01-C001-HD-debug-main.c: 135: }
   659                           ;WAFR-01-C001-HD-debug-main.c: 137: keyValue = ProcessButton();
   660  000424  ECE1  F002         	call	_ProcessButton	;wreg free
   661  000428  0100               	movlb	0	; () banked
   662  00042A  6F90               	movwf	main@keyValue& (0+255),b
   663                           
   664                           ; BSR set to: 0
   665                           ;WAFR-01-C001-HD-debug-main.c: 138: if ( keyValue != 0 )
   666  00042C  0100               	movlb	0	; () banked
   667  00042E  5190               	movf	main@keyValue& (0+255),w,b
   668  000430  0100               	movlb	0	; () banked
   669  000432  A4D8               	btfss	status,2,c
   670  000434  D009               	goto	l2276
   671  000436                     l2274:
   672                           
   673                           ; BSR set to: 0
   674  000436  5038               	movf	_timeSystemRun+3,w,c
   675  000438  1037               	iorwf	_timeSystemRun+2,w,c
   676  00043A  E106               	bnz	l2276
   677  00043C  0EE8               	movlw	232
   678  00043E  5C35               	subwf	_timeSystemRun,w,c
   679  000440  0E03               	movlw	3
   680  000442  5836               	subwfb	_timeSystemRun+1,w,c
   681  000444  A0D8               	btfss	status,0,c
   682  000446  D7A5               	goto	l2248
   683  000448                     l2276:
   684                           
   685                           ; BSR set to: 0
   686                           ;WAFR-01-C001-HD-debug-main.c: 141: }
   687                           ;WAFR-01-C001-HD-debug-main.c: 142: }
   688                           ;WAFR-01-C001-HD-debug-main.c: 148: levelTmpSetting = ReadEEprom( 0 );
   689  000448  0E00               	movlw	0
   690  00044A  EC41  F005         	call	_ReadEEprom
   691  00044E  6E3E               	movwf	_levelTmpSetting,c
   692                           
   693                           ;WAFR-01-C001-HD-debug-main.c: 149: if ( (levelTmpSetting > 3) | (levelTmpSetting == 0 )
      +                           )
   694  000450  0E04               	movlw	4
   695  000452  603E               	cpfslt	_levelTmpSetting,c
   696  000454  D003               	goto	l2282
   697  000456  503E               	movf	_levelTmpSetting,w,c
   698  000458  A4D8               	btfss	status,2,c
   699  00045A  D002               	goto	l2284
   700  00045C                     l2282:
   701                           
   702                           ;WAFR-01-C001-HD-debug-main.c: 150: {
   703                           ;WAFR-01-C001-HD-debug-main.c: 151: levelTmpSetting = 1 ;
   704  00045C  0E01               	movlw	1
   705  00045E  6E3E               	movwf	_levelTmpSetting,c
   706  000460                     l2284:
   707                           
   708                           ;WAFR-01-C001-HD-debug-main.c: 158: {
   709                           ;WAFR-01-C001-HD-debug-main.c: 159: keyValue = ProcessButton();
   710  000460  ECE1  F002         	call	_ProcessButton	;wreg free
   711  000464  0100               	movlb	0	; () banked
   712  000466  6F90               	movwf	main@keyValue& (0+255),b
   713                           
   714                           ;WAFR-01-C001-HD-debug-main.c: 161: switch ( keyValue)
   715  000468  D006               	goto	l2292
   716  00046A                     l2286:
   717                           
   718                           ; BSR set to: 0
   719                           ;WAFR-01-C001-HD-debug-main.c: 169: ProcessHeat();
   720  00046A  EC0D  F000         	call	_ProcessHeat	;wreg free
   721                           
   722                           ;WAFR-01-C001-HD-debug-main.c: 170: break;
   723  00046E  D00E               	goto	l2294
   724  000470                     l2288:
   725                           
   726                           ;WAFR-01-C001-HD-debug-main.c: 172: ShutDownSystem();
   727  000470  EC5F  F004         	call	_ShutDownSystem	;wreg free
   728                           
   729                           ;WAFR-01-C001-HD-debug-main.c: 175: }
   730                           
   731                           ;WAFR-01-C001-HD-debug-main.c: 174: default: break;
   732                           
   733                           ;WAFR-01-C001-HD-debug-main.c: 173: break;
   734  000474  D00B               	goto	l2294
   735  000476                     l2292:
   736  000476  0100               	movlb	0	; () banked
   737  000478  5190               	movf	main@keyValue& (0+255),w,b
   738                           
   739                           ; Switch size 1, requested type "space"
   740                           ; Number of cases is 3, Range of values is 1 to 3
   741                           ; switch strategies available:
   742                           ; Name         Instructions Cycles
   743                           ; simple_byte           10     6 (average)
   744                           ;	Chosen strategy is simple_byte
   745  00047A  0A01               	xorlw	1	; case 1
   746  00047C  B4D8               	btfsc	status,2,c
   747  00047E  D006               	goto	l2294
   748  000480  0A03               	xorlw	3	; case 2
   749  000482  B4D8               	btfsc	status,2,c
   750  000484  D7F2               	goto	l2286
   751  000486  0A01               	xorlw	1	; case 3
   752  000488  B4D8               	btfsc	status,2,c
   753  00048A  D7F2               	goto	l2288
   754  00048C                     l2294:
   755                           
   756                           ;WAFR-01-C001-HD-debug-main.c: 184: if ( timerHalfSecond >= 1 )
   757  00048C  5039               	movf	_timerHalfSecond,w,c
   758  00048E  103A               	iorwf	_timerHalfSecond+1,w,c
   759  000490  B4D8               	btfsc	status,2,c
   760  000492  D7E6               	goto	l2284
   761                           
   762                           ;WAFR-01-C001-HD-debug-main.c: 185: {
   763                           ;WAFR-01-C001-HD-debug-main.c: 186: LevelTmpSetShow();
   764  000494  EC82  F004         	call	_LevelTmpSetShow	;wreg free
   765  000498  D7E3               	goto	l2284
   766  00049A                     __end_of_main:
   767                           	opt stack 0
   768                           tblptru	equ	0xFF8
   769                           postinc0	equ	0xFEE
   770                           wreg	equ	0xFE8
   771                           postinc2	equ	0xFDE
   772                           postdec2	equ	0xFDD
   773                           fsr2h	equ	0xFDA
   774                           fsr2l	equ	0xFD9
   775                           status	equ	0xFD8
   776                           
   777 ;; *************** function _ShutDownSystem *****************
   778 ;; Defined at:
   779 ;;		line 330 in file "WAFR-01-C001 HD-debug.X/sys/system.c"
   780 ;; Parameters:    Size  Location     Type
   781 ;;		None
   782 ;; Auto vars:     Size  Location     Type
   783 ;;		None
   784 ;; Return value:  Size  Location     Type
   785 ;;		None               void
   786 ;; Registers used:
   787 ;;		wreg, status,2, status,0, cstack
   788 ;; Tracked objects:
   789 ;;		On entry : 0/0
   790 ;;		On exit  : 0/0
   791 ;;		Unchanged: 0/0
   792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   793 ;;      Params:         0       0       0       0
   794 ;;      Locals:         0       0       0       0
   795 ;;      Temps:          1       0       0       0
   796 ;;      Totals:         1       0       0       0
   797 ;;Total ram usage:        1 bytes
   798 ;; Hardware stack levels used:    1
   799 ;; Hardware stack levels required when called:    2
   800 ;; This function calls:
   801 ;;		_delay_ms
   802 ;;		_turnOffAllLed
   803 ;; This function is called by:
   804 ;;		_main
   805 ;; This function uses a non-reentrant model
   806 ;;
   807                           
   808                           	psect	text1
   809  0008BE                     __ptext1:
   810                           	opt stack 0
   811  0008BE                     _ShutDownSystem:
   812                           	opt stack 28
   813                           
   814                           ;system.c: 333: turnOffAllLed();
   815                           
   816                           ;incstack = 0
   817  0008BE  EC4C  F005         	call	_turnOffAllLed	;wreg free
   818  0008C2                     l2206:
   819                           
   820                           ;system.c: 335: {
   821                           ;system.c: 336: PORTBbits.RB2 = 0 ;
   822  0008C2  9481               	bcf	3969,2,c	;volatile
   823                           
   824                           ;system.c: 337: PORTCbits.RC2 = ! PORTCbits.RC2 ;
   825  0008C4  B482               	btfsc	3970,2,c	;volatile
   826  0008C6  D003               	goto	u1640
   827  0008C8  6A5D               	clrf	??_ShutDownSystem& (0+255),c
   828  0008CA  2A5D               	incf	??_ShutDownSystem& (0+255),f,c
   829  0008CC  D001               	goto	u1658
   830  0008CE                     u1640:
   831  0008CE  6A5D               	clrf	??_ShutDownSystem& (0+255),c
   832  0008D0                     u1658:
   833  0008D0  465D               	rlncf	??_ShutDownSystem,f,c
   834  0008D2  465D               	rlncf	??_ShutDownSystem,f,c
   835  0008D4  5082               	movf	3970,w,c	;volatile
   836  0008D6  185D               	xorwf	??_ShutDownSystem,w,c
   837  0008D8  0BFB               	andlw	-5
   838  0008DA  185D               	xorwf	??_ShutDownSystem,w,c
   839  0008DC  6E82               	movwf	3970,c	;volatile
   840                           
   841                           ;system.c: 339: PORTCbits.RC1 = ! PORTCbits.RC1 ;
   842  0008DE  B282               	btfsc	3970,1,c	;volatile
   843  0008E0  D003               	goto	u1660
   844  0008E2  6A5D               	clrf	??_ShutDownSystem& (0+255),c
   845  0008E4  2A5D               	incf	??_ShutDownSystem& (0+255),f,c
   846  0008E6  D001               	goto	u1678
   847  0008E8                     u1660:
   848  0008E8  6A5D               	clrf	??_ShutDownSystem& (0+255),c
   849  0008EA                     u1678:
   850  0008EA  465D               	rlncf	??_ShutDownSystem,f,c
   851  0008EC  5082               	movf	3970,w,c	;volatile
   852  0008EE  185D               	xorwf	??_ShutDownSystem,w,c
   853  0008F0  0BFD               	andlw	-3
   854  0008F2  185D               	xorwf	??_ShutDownSystem,w,c
   855  0008F4  6E82               	movwf	3970,c	;volatile
   856                           
   857                           ;system.c: 340: delay_ms(80);
   858  0008F6  0E00               	movlw	0
   859  0008F8  6E58               	movwf	delay_ms@x+1,c
   860  0008FA  0E50               	movlw	80
   861  0008FC  6E57               	movwf	delay_ms@x,c
   862  0008FE  ECC8  F004         	call	_delay_ms	;wreg free
   863  000902  D7DF               	goto	l2206
   864  000904                     __end_of_ShutDownSystem:
   865                           	opt stack 0
   866                           tblptru	equ	0xFF8
   867                           postinc0	equ	0xFEE
   868                           wreg	equ	0xFE8
   869                           postinc2	equ	0xFDE
   870                           postdec2	equ	0xFDD
   871                           fsr2h	equ	0xFDA
   872                           fsr2l	equ	0xFD9
   873                           status	equ	0xFD8
   874                           
   875 ;; *************** function _delay_ms *****************
   876 ;; Defined at:
   877 ;;		line 27 in file "WAFR-01-C001 HD-debug.X/user/user.c"
   878 ;; Parameters:    Size  Location     Type
   879 ;;  x               2   22[COMRAM] unsigned int 
   880 ;; Auto vars:     Size  Location     Type
   881 ;;  i               2   26[COMRAM] unsigned int 
   882 ;;  j               2   24[COMRAM] unsigned int 
   883 ;; Return value:  Size  Location     Type
   884 ;;		None               void
   885 ;; Registers used:
   886 ;;		wreg, status,2, status,0
   887 ;; Tracked objects:
   888 ;;		On entry : 0/0
   889 ;;		On exit  : 0/0
   890 ;;		Unchanged: 0/0
   891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   892 ;;      Params:         2       0       0       0
   893 ;;      Locals:         4       0       0       0
   894 ;;      Temps:          0       0       0       0
   895 ;;      Totals:         6       0       0       0
   896 ;;Total ram usage:        6 bytes
   897 ;; Hardware stack levels used:    1
   898 ;; Hardware stack levels required when called:    1
   899 ;; This function calls:
   900 ;;		Nothing
   901 ;; This function is called by:
   902 ;;		_main
   903 ;;		_ShutDownSystem
   904 ;;		_delay_s
   905 ;; This function uses a non-reentrant model
   906 ;;
   907                           
   908                           	psect	text2
   909  000990                     __ptext2:
   910                           	opt stack 0
   911  000990                     _delay_ms:
   912                           	opt stack 29
   913                           
   914                           ;user.c: 29: unsigned int i,j;
   915                           ;user.c: 31: for ( j=0 ; j<x ;j++ )
   916                           
   917                           ;incstack = 0
   918  000990  0E00               	movlw	0
   919  000992  6E5A               	movwf	delay_ms@j+1,c
   920  000994  0E00               	movlw	0
   921  000996  6E59               	movwf	delay_ms@j,c
   922  000998  D00F               	goto	l1924
   923  00099A                     l1912:
   924                           
   925                           ;user.c: 32: {
   926                           ;user.c: 33: for ( i=0; i<400; i++ );
   927  00099A  0E00               	movlw	0
   928  00099C  6E5C               	movwf	delay_ms@i+1,c
   929  00099E  0E00               	movlw	0
   930  0009A0  6E5B               	movwf	delay_ms@i,c
   931  0009A2                     l1914:
   932  0009A2  0E90               	movlw	144
   933  0009A4  5C5B               	subwf	delay_ms@i,w,c
   934  0009A6  0E01               	movlw	1
   935  0009A8  585C               	subwfb	delay_ms@i+1,w,c
   936  0009AA  B0D8               	btfsc	status,0,c
   937  0009AC  D003               	goto	l1922
   938  0009AE  4A5B               	infsnz	delay_ms@i,f,c
   939  0009B0  2A5C               	incf	delay_ms@i+1,f,c
   940  0009B2  D7F7               	goto	l1914
   941  0009B4                     l1922:
   942  0009B4  4A59               	infsnz	delay_ms@j,f,c
   943  0009B6  2A5A               	incf	delay_ms@j+1,f,c
   944  0009B8                     l1924:
   945  0009B8  5057               	movf	delay_ms@x,w,c
   946  0009BA  5C59               	subwf	delay_ms@j,w,c
   947  0009BC  5058               	movf	delay_ms@x+1,w,c
   948  0009BE  585A               	subwfb	delay_ms@j+1,w,c
   949  0009C0  B0D8               	btfsc	status,0,c
   950  0009C2  0012               	return	
   951  0009C4  D7EA               	goto	l1912
   952  0009C6                     __end_of_delay_ms:
   953                           	opt stack 0
   954                           tblptru	equ	0xFF8
   955                           postinc0	equ	0xFEE
   956                           wreg	equ	0xFE8
   957                           postinc2	equ	0xFDE
   958                           postdec2	equ	0xFDD
   959                           fsr2h	equ	0xFDA
   960                           fsr2l	equ	0xFD9
   961                           status	equ	0xFD8
   962                           
   963 ;; *************** function _ProcessHeat *****************
   964 ;; Defined at:
   965 ;;		line 351 in file "WAFR-01-C001 HD-debug.X/sys/system.c"
   966 ;; Parameters:    Size  Location     Type
   967 ;;		None
   968 ;; Auto vars:     Size  Location     Type
   969 ;;  countHeatTim    4    5[BANK0 ] unsigned long 
   970 ;;  adcValue        2    9[BANK0 ] unsigned short 
   971 ;;  flagStop        1    4[BANK0 ] unsigned char 
   972 ;; Return value:  Size  Location     Type
   973 ;;		None               void
   974 ;; Registers used:
   975 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   976 ;; Tracked objects:
   977 ;;		On entry : 0/0
   978 ;;		On exit  : 0/0
   979 ;;		Unchanged: 0/0
   980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   981 ;;      Params:         0       0       0       0
   982 ;;      Locals:         0       7       0       0
   983 ;;      Temps:          0       4       0       0
   984 ;;      Totals:         0      11       0       0
   985 ;;Total ram usage:       11 bytes
   986 ;; Hardware stack levels used:    1
   987 ;; Hardware stack levels required when called:    4
   988 ;; This function calls:
   989 ;;		_GetAdcAD597Value
   990 ;;		_HeatProcessLedShow
   991 ;;		_ReadEEprom
   992 ;;		_WriteEEprom
   993 ;;		_turnOffAllLed
   994 ;; This function is called by:
   995 ;;		_main
   996 ;; This function uses a non-reentrant model
   997 ;;
   998                           
   999                           	psect	text3
  1000  00001A                     __ptext3:
  1001                           	opt stack 0
  1002  00001A                     _ProcessHeat:
  1003                           	opt stack 26
  1004                           
  1005                           ;system.c: 353: uint16 adcValue;
  1006                           ;system.c: 354: uint8 flagStop=0 ;
  1007                           
  1008                           ;incstack = 0
  1009  00001A  0E00               	movlw	0
  1010  00001C  0100               	movlb	0	; () banked
  1011  00001E  6F84               	movwf	ProcessHeat@flagStop& (0+255),b
  1012                           
  1013                           ;system.c: 355: uint32 countHeatTime = 0 ;
  1014  000020  0E00               	movlw	0
  1015  000022  0100               	movlb	0	; () banked
  1016  000024  6F85               	movwf	ProcessHeat@countHeatTime& (0+255),b
  1017  000026  0E00               	movlw	0
  1018  000028  6F86               	movwf	(ProcessHeat@countHeatTime+1)& (0+255),b
  1019  00002A  0E00               	movlw	0
  1020  00002C  6F87               	movwf	(ProcessHeat@countHeatTime+2)& (0+255),b
  1021  00002E  0E00               	movlw	0
  1022  000030  6F88               	movwf	(ProcessHeat@countHeatTime+3)& (0+255),b
  1023                           
  1024                           ; BSR set to: 0
  1025                           ;system.c: 359: WriteEEprom ( 0, levelTmpSetting );
  1026  000032  C03E  F057         	movff	_levelTmpSetting,WriteEEprom@data
  1027  000036  0E00               	movlw	0
  1028  000038  ECE3  F004         	call	_WriteEEprom
  1029                           
  1030                           ;system.c: 363: levelTmpSetting = ReadEEprom( 0 );
  1031  00003C  0E00               	movlw	0
  1032  00003E  EC41  F005         	call	_ReadEEprom
  1033  000042  6E3E               	movwf	_levelTmpSetting,c
  1034                           
  1035                           ;system.c: 365: PORTBbits.RB1 = 1 ;
  1036  000044  8281               	bsf	3969,1,c	;volatile
  1037                           
  1038                           ;system.c: 367: turnOffAllLed();
  1039  000046  EC4C  F005         	call	_turnOffAllLed	;wreg free
  1040                           
  1041                           ;system.c: 368: countHeatTime = timeSystemRun ;
  1042  00004A  C035  F085         	movff	_timeSystemRun,ProcessHeat@countHeatTime
  1043  00004E  C036  F086         	movff	_timeSystemRun+1,ProcessHeat@countHeatTime+1
  1044  000052  C037  F087         	movff	_timeSystemRun+2,ProcessHeat@countHeatTime+2
  1045  000056  C038  F088         	movff	_timeSystemRun+3,ProcessHeat@countHeatTime+3
  1046  00005A                     l2134:
  1047                           
  1048                           ;system.c: 370: {
  1049                           ;system.c: 372: if ( (countHeatTime + 1500 ) < timeSystemRun )
  1050  00005A  0EDC               	movlw	220
  1051  00005C  0100               	movlb	0	; () banked
  1052  00005E  2585               	addwf	ProcessHeat@countHeatTime& (0+255),w,b
  1053  000060  0100               	movlb	0	; () banked
  1054  000062  6F80               	movwf	??_ProcessHeat& (0+255),b
  1055  000064  0E05               	movlw	5
  1056  000066  0100               	movlb	0	; () banked
  1057  000068  2186               	addwfc	(ProcessHeat@countHeatTime+1)& (0+255),w,b
  1058  00006A  0100               	movlb	0	; () banked
  1059  00006C  6F81               	movwf	(??_ProcessHeat+1)& (0+255),b
  1060  00006E  0E00               	movlw	0
  1061  000070  0100               	movlb	0	; () banked
  1062  000072  2187               	addwfc	(ProcessHeat@countHeatTime+2)& (0+255),w,b
  1063  000074  0100               	movlb	0	; () banked
  1064  000076  6F82               	movwf	(??_ProcessHeat+2)& (0+255),b
  1065  000078  0E00               	movlw	0
  1066  00007A  0100               	movlb	0	; () banked
  1067  00007C  2188               	addwfc	(ProcessHeat@countHeatTime+3)& (0+255),w,b
  1068  00007E  0100               	movlb	0	; () banked
  1069  000080  6F83               	movwf	(??_ProcessHeat+3)& (0+255),b
  1070  000082  5035               	movf	_timeSystemRun,w,c
  1071  000084  0100               	movlb	0	; () banked
  1072  000086  5D80               	subwf	??_ProcessHeat& (0+255),w,b
  1073  000088  5036               	movf	_timeSystemRun+1,w,c
  1074  00008A  0100               	movlb	0	; () banked
  1075  00008C  5981               	subwfb	(??_ProcessHeat+1)& (0+255),w,b
  1076  00008E  5037               	movf	_timeSystemRun+2,w,c
  1077  000090  0100               	movlb	0	; () banked
  1078  000092  5982               	subwfb	(??_ProcessHeat+2)& (0+255),w,b
  1079  000094  5038               	movf	_timeSystemRun+3,w,c
  1080  000096  0100               	movlb	0	; () banked
  1081  000098  5983               	subwfb	(??_ProcessHeat+3)& (0+255),w,b
  1082  00009A  B0D8               	btfsc	status,0,c
  1083  00009C  D004               	goto	l2138
  1084                           
  1085                           ; BSR set to: 0
  1086                           ;system.c: 373: {
  1087                           ;system.c: 374: flagStop = 1 ;
  1088  00009E  0E01               	movlw	1
  1089  0000A0  0100               	movlb	0	; () banked
  1090  0000A2  6F84               	movwf	ProcessHeat@flagStop& (0+255),b
  1091                           
  1092                           ;system.c: 375: break;
  1093  0000A4  D0FA               	goto	l232
  1094  0000A6                     l2138:
  1095                           
  1096                           ; BSR set to: 0
  1097                           ;system.c: 376: }
  1098                           ;system.c: 378: HeatProcessLedShow();
  1099  0000A6  ECEB  F003         	call	_HeatProcessLedShow	;wreg free
  1100                           
  1101                           ;system.c: 380: adcValue = GetAdcAD597Value( 0 );
  1102  0000AA  0E00               	movlw	0
  1103  0000AC  EC98  F003         	call	_GetAdcAD597Value
  1104  0000B0  C060  F089         	movff	?_GetAdcAD597Value,ProcessHeat@adcValue
  1105  0000B4  C061  F08A         	movff	?_GetAdcAD597Value+1,ProcessHeat@adcValue+1
  1106                           
  1107                           ;system.c: 382: switch ( levelTmpSetting )
  1108  0000B8  D0E1               	goto	l2198
  1109  0000BA                     l2142:
  1110                           
  1111                           ;system.c: 385: if ( adcValue > 180 )
  1112  0000BA  0100               	movlb	0	; () banked
  1113  0000BC  518A               	movf	(ProcessHeat@adcValue+1)& (0+255),w,b
  1114  0000BE  E105               	bnz	u1540
  1115  0000C0  0EB5               	movlw	181
  1116  0000C2  0100               	movlb	0	; () banked
  1117  0000C4  5D89               	subwf	ProcessHeat@adcValue& (0+255),w,b
  1118  0000C6  A0D8               	btfss	status,0,c
  1119  0000C8  D0E3               	goto	l2200
  1120  0000CA                     u1540:
  1121                           
  1122                           ; BSR set to: 0
  1123                           ;system.c: 386: {
  1124                           ;system.c: 387: flagStop = 1 ;
  1125  0000CA  0E01               	movlw	1
  1126  0000CC  0100               	movlb	0	; () banked
  1127  0000CE  6F84               	movwf	ProcessHeat@flagStop& (0+255),b
  1128                           
  1129                           ; BSR set to: 0
  1130                           ;system.c: 388: PORTCbits.RC2 = 1 ;
  1131  0000D0  8482               	bsf	3970,2,c	;volatile
  1132                           
  1133                           ; BSR set to: 0
  1134                           ;system.c: 390: countHeatTime = timeSystemRun ;
  1135  0000D2  C035  F085         	movff	_timeSystemRun,ProcessHeat@countHeatTime
  1136  0000D6  C036  F086         	movff	_timeSystemRun+1,ProcessHeat@countHeatTime+1
  1137  0000DA  C037  F087         	movff	_timeSystemRun+2,ProcessHeat@countHeatTime+2
  1138  0000DE  C038  F088         	movff	_timeSystemRun+3,ProcessHeat@countHeatTime+3
  1139                           
  1140                           ;system.c: 391: while ( (countHeatTime + 1000) > timeSystemRun )
  1141  0000E2  D012               	goto	l2156
  1142  0000E4                     l2150:
  1143                           
  1144                           ; BSR set to: 0
  1145                           ;system.c: 392: {
  1146                           ;system.c: 393: adcValue = GetAdcAD597Value( 0 );
  1147  0000E4  0E00               	movlw	0
  1148  0000E6  EC98  F003         	call	_GetAdcAD597Value
  1149  0000EA  C060  F089         	movff	?_GetAdcAD597Value,ProcessHeat@adcValue
  1150  0000EE  C061  F08A         	movff	?_GetAdcAD597Value+1,ProcessHeat@adcValue+1
  1151                           
  1152                           ;system.c: 394: if ( adcValue > 180)
  1153  0000F2  0100               	movlb	0	; () banked
  1154  0000F4  518A               	movf	(ProcessHeat@adcValue+1)& (0+255),w,b
  1155  0000F6  E105               	bnz	u1550
  1156  0000F8  0EB5               	movlw	181
  1157  0000FA  0100               	movlb	0	; () banked
  1158  0000FC  5D89               	subwf	ProcessHeat@adcValue& (0+255),w,b
  1159  0000FE  A0D8               	btfss	status,0,c
  1160  000100  D002               	goto	l238
  1161  000102                     u1550:
  1162                           
  1163                           ; BSR set to: 0
  1164                           ;system.c: 395: {
  1165                           ;system.c: 396: PORTBbits.RB1 = 0 ;
  1166  000102  9281               	bcf	3969,1,c	;volatile
  1167                           
  1168                           ;system.c: 397: }else
  1169  000104  D001               	goto	l2156
  1170  000106                     l238:
  1171                           
  1172                           ; BSR set to: 0
  1173                           ;system.c: 398: {
  1174                           ;system.c: 399: PORTBbits.RB1 = 1 ;
  1175  000106  8281               	bsf	3969,1,c	;volatile
  1176  000108                     l2156:
  1177                           
  1178                           ; BSR set to: 0
  1179  000108  0EE8               	movlw	232
  1180  00010A  0100               	movlb	0	; () banked
  1181  00010C  2585               	addwf	ProcessHeat@countHeatTime& (0+255),w,b
  1182  00010E  0100               	movlb	0	; () banked
  1183  000110  6F80               	movwf	??_ProcessHeat& (0+255),b
  1184  000112  0E03               	movlw	3
  1185  000114  0100               	movlb	0	; () banked
  1186  000116  2186               	addwfc	(ProcessHeat@countHeatTime+1)& (0+255),w,b
  1187  000118  0100               	movlb	0	; () banked
  1188  00011A  6F81               	movwf	(??_ProcessHeat+1)& (0+255),b
  1189  00011C  0E00               	movlw	0
  1190  00011E  0100               	movlb	0	; () banked
  1191  000120  2187               	addwfc	(ProcessHeat@countHeatTime+2)& (0+255),w,b
  1192  000122  0100               	movlb	0	; () banked
  1193  000124  6F82               	movwf	(??_ProcessHeat+2)& (0+255),b
  1194  000126  0E00               	movlw	0
  1195  000128  0100               	movlb	0	; () banked
  1196  00012A  2188               	addwfc	(ProcessHeat@countHeatTime+3)& (0+255),w,b
  1197  00012C  0100               	movlb	0	; () banked
  1198  00012E  6F83               	movwf	(??_ProcessHeat+3)& (0+255),b
  1199  000130  0100               	movlb	0	; () banked
  1200  000132  5180               	movf	??_ProcessHeat& (0+255),w,b
  1201  000134  5C35               	subwf	_timeSystemRun,w,c
  1202  000136  0100               	movlb	0	; () banked
  1203  000138  5181               	movf	(??_ProcessHeat+1)& (0+255),w,b
  1204  00013A  5836               	subwfb	_timeSystemRun+1,w,c
  1205  00013C  0100               	movlb	0	; () banked
  1206  00013E  5182               	movf	(??_ProcessHeat+2)& (0+255),w,b
  1207  000140  5837               	subwfb	_timeSystemRun+2,w,c
  1208  000142  0100               	movlb	0	; () banked
  1209  000144  5183               	movf	(??_ProcessHeat+3)& (0+255),w,b
  1210  000146  5838               	subwfb	_timeSystemRun+3,w,c
  1211  000148  B0D8               	btfsc	status,0,c
  1212  00014A  D0A2               	goto	l2200
  1213  00014C  D7CB               	goto	l2150
  1214  00014E                     l2158:
  1215                           
  1216                           ;system.c: 405: if ( adcValue > 200 )
  1217  00014E  0100               	movlb	0	; () banked
  1218  000150  518A               	movf	(ProcessHeat@adcValue+1)& (0+255),w,b
  1219  000152  E105               	bnz	u1570
  1220  000154  0EC9               	movlw	201
  1221  000156  0100               	movlb	0	; () banked
  1222  000158  5D89               	subwf	ProcessHeat@adcValue& (0+255),w,b
  1223  00015A  A0D8               	btfss	status,0,c
  1224  00015C  D099               	goto	l2200
  1225  00015E                     u1570:
  1226                           
  1227                           ; BSR set to: 0
  1228                           ;system.c: 406: {
  1229                           ;system.c: 407: flagStop = 1 ;
  1230  00015E  0E01               	movlw	1
  1231  000160  0100               	movlb	0	; () banked
  1232  000162  6F84               	movwf	ProcessHeat@flagStop& (0+255),b
  1233                           
  1234                           ; BSR set to: 0
  1235                           ;system.c: 408: PORTCbits.RC1 = 1 ;
  1236  000164  8282               	bsf	3970,1,c	;volatile
  1237                           
  1238                           ; BSR set to: 0
  1239                           ;system.c: 409: PORTCbits.RC4 = 1 ;
  1240  000166  8882               	bsf	3970,4,c	;volatile
  1241                           
  1242                           ; BSR set to: 0
  1243                           ;system.c: 411: countHeatTime = timeSystemRun ;
  1244  000168  C035  F085         	movff	_timeSystemRun,ProcessHeat@countHeatTime
  1245  00016C  C036  F086         	movff	_timeSystemRun+1,ProcessHeat@countHeatTime+1
  1246  000170  C037  F087         	movff	_timeSystemRun+2,ProcessHeat@countHeatTime+2
  1247  000174  C038  F088         	movff	_timeSystemRun+3,ProcessHeat@countHeatTime+3
  1248                           
  1249                           ;system.c: 412: while ( (countHeatTime + 1000) > timeSystemRun )
  1250  000178  D012               	goto	l2174
  1251  00017A                     l2168:
  1252                           
  1253                           ; BSR set to: 0
  1254                           ;system.c: 413: {
  1255                           ;system.c: 414: adcValue = GetAdcAD597Value( 0 );
  1256  00017A  0E00               	movlw	0
  1257  00017C  EC98  F003         	call	_GetAdcAD597Value
  1258  000180  C060  F089         	movff	?_GetAdcAD597Value,ProcessHeat@adcValue
  1259  000184  C061  F08A         	movff	?_GetAdcAD597Value+1,ProcessHeat@adcValue+1
  1260                           
  1261                           ;system.c: 415: if ( adcValue > 200)
  1262  000188  0100               	movlb	0	; () banked
  1263  00018A  518A               	movf	(ProcessHeat@adcValue+1)& (0+255),w,b
  1264  00018C  E105               	bnz	u1580
  1265  00018E  0EC9               	movlw	201
  1266  000190  0100               	movlb	0	; () banked
  1267  000192  5D89               	subwf	ProcessHeat@adcValue& (0+255),w,b
  1268  000194  A0D8               	btfss	status,0,c
  1269  000196  D002               	goto	l246
  1270  000198                     u1580:
  1271                           
  1272                           ; BSR set to: 0
  1273                           ;system.c: 416: {
  1274                           ;system.c: 417: PORTBbits.RB1 = 0 ;
  1275  000198  9281               	bcf	3969,1,c	;volatile
  1276                           
  1277                           ;system.c: 418: }else
  1278  00019A  D001               	goto	l2174
  1279  00019C                     l246:
  1280                           
  1281                           ; BSR set to: 0
  1282                           ;system.c: 419: {
  1283                           ;system.c: 420: PORTBbits.RB1 = 1 ;
  1284  00019C  8281               	bsf	3969,1,c	;volatile
  1285  00019E                     l2174:
  1286                           
  1287                           ; BSR set to: 0
  1288  00019E  0EE8               	movlw	232
  1289  0001A0  0100               	movlb	0	; () banked
  1290  0001A2  2585               	addwf	ProcessHeat@countHeatTime& (0+255),w,b
  1291  0001A4  0100               	movlb	0	; () banked
  1292  0001A6  6F80               	movwf	??_ProcessHeat& (0+255),b
  1293  0001A8  0E03               	movlw	3
  1294  0001AA  0100               	movlb	0	; () banked
  1295  0001AC  2186               	addwfc	(ProcessHeat@countHeatTime+1)& (0+255),w,b
  1296  0001AE  0100               	movlb	0	; () banked
  1297  0001B0  6F81               	movwf	(??_ProcessHeat+1)& (0+255),b
  1298  0001B2  0E00               	movlw	0
  1299  0001B4  0100               	movlb	0	; () banked
  1300  0001B6  2187               	addwfc	(ProcessHeat@countHeatTime+2)& (0+255),w,b
  1301  0001B8  0100               	movlb	0	; () banked
  1302  0001BA  6F82               	movwf	(??_ProcessHeat+2)& (0+255),b
  1303  0001BC  0E00               	movlw	0
  1304  0001BE  0100               	movlb	0	; () banked
  1305  0001C0  2188               	addwfc	(ProcessHeat@countHeatTime+3)& (0+255),w,b
  1306  0001C2  0100               	movlb	0	; () banked
  1307  0001C4  6F83               	movwf	(??_ProcessHeat+3)& (0+255),b
  1308  0001C6  0100               	movlb	0	; () banked
  1309  0001C8  5180               	movf	??_ProcessHeat& (0+255),w,b
  1310  0001CA  5C35               	subwf	_timeSystemRun,w,c
  1311  0001CC  0100               	movlb	0	; () banked
  1312  0001CE  5181               	movf	(??_ProcessHeat+1)& (0+255),w,b
  1313  0001D0  5836               	subwfb	_timeSystemRun+1,w,c
  1314  0001D2  0100               	movlb	0	; () banked
  1315  0001D4  5182               	movf	(??_ProcessHeat+2)& (0+255),w,b
  1316  0001D6  5837               	subwfb	_timeSystemRun+2,w,c
  1317  0001D8  0100               	movlb	0	; () banked
  1318  0001DA  5183               	movf	(??_ProcessHeat+3)& (0+255),w,b
  1319  0001DC  5838               	subwfb	_timeSystemRun+3,w,c
  1320  0001DE  B0D8               	btfsc	status,0,c
  1321  0001E0  D057               	goto	l2200
  1322  0001E2  D7CB               	goto	l2168
  1323  0001E4                     l2176:
  1324                           
  1325                           ;system.c: 426: if ( adcValue > 220 )
  1326  0001E4  0100               	movlb	0	; () banked
  1327  0001E6  518A               	movf	(ProcessHeat@adcValue+1)& (0+255),w,b
  1328  0001E8  E105               	bnz	u1600
  1329  0001EA  0EDD               	movlw	221
  1330  0001EC  0100               	movlb	0	; () banked
  1331  0001EE  5D89               	subwf	ProcessHeat@adcValue& (0+255),w,b
  1332  0001F0  A0D8               	btfss	status,0,c
  1333  0001F2  D04E               	goto	l2200
  1334  0001F4                     u1600:
  1335                           
  1336                           ; BSR set to: 0
  1337                           ;system.c: 427: {
  1338                           ;system.c: 428: flagStop = 1 ;
  1339  0001F4  0E01               	movlw	1
  1340  0001F6  0100               	movlb	0	; () banked
  1341  0001F8  6F84               	movwf	ProcessHeat@flagStop& (0+255),b
  1342                           
  1343                           ; BSR set to: 0
  1344                           ;system.c: 429: PORTCbits.RC0 = 1 ;
  1345  0001FA  8082               	bsf	3970,0,c	;volatile
  1346                           
  1347                           ; BSR set to: 0
  1348                           ;system.c: 430: PORTCbits.RC3 = 1 ;
  1349  0001FC  8682               	bsf	3970,3,c	;volatile
  1350                           
  1351                           ; BSR set to: 0
  1352                           ;system.c: 431: PORTCbits.RC6 = 1 ;
  1353  0001FE  8C82               	bsf	3970,6,c	;volatile
  1354                           
  1355                           ; BSR set to: 0
  1356                           ;system.c: 433: countHeatTime = timeSystemRun ;
  1357  000200  C035  F085         	movff	_timeSystemRun,ProcessHeat@countHeatTime
  1358  000204  C036  F086         	movff	_timeSystemRun+1,ProcessHeat@countHeatTime+1
  1359  000208  C037  F087         	movff	_timeSystemRun+2,ProcessHeat@countHeatTime+2
  1360  00020C  C038  F088         	movff	_timeSystemRun+3,ProcessHeat@countHeatTime+3
  1361                           
  1362                           ;system.c: 434: while ( (countHeatTime + 1000) > timeSystemRun )
  1363  000210  D012               	goto	l2194
  1364  000212                     l2188:
  1365                           
  1366                           ; BSR set to: 0
  1367                           ;system.c: 435: {
  1368                           ;system.c: 436: adcValue = GetAdcAD597Value( 0 );
  1369  000212  0E00               	movlw	0
  1370  000214  EC98  F003         	call	_GetAdcAD597Value
  1371  000218  C060  F089         	movff	?_GetAdcAD597Value,ProcessHeat@adcValue
  1372  00021C  C061  F08A         	movff	?_GetAdcAD597Value+1,ProcessHeat@adcValue+1
  1373                           
  1374                           ;system.c: 437: if ( adcValue > 220)
  1375  000220  0100               	movlb	0	; () banked
  1376  000222  518A               	movf	(ProcessHeat@adcValue+1)& (0+255),w,b
  1377  000224  E105               	bnz	u1610
  1378  000226  0EDD               	movlw	221
  1379  000228  0100               	movlb	0	; () banked
  1380  00022A  5D89               	subwf	ProcessHeat@adcValue& (0+255),w,b
  1381  00022C  A0D8               	btfss	status,0,c
  1382  00022E  D002               	goto	l253
  1383  000230                     u1610:
  1384                           
  1385                           ; BSR set to: 0
  1386                           ;system.c: 438: {
  1387                           ;system.c: 439: PORTBbits.RB1 = 0 ;
  1388  000230  9281               	bcf	3969,1,c	;volatile
  1389                           
  1390                           ;system.c: 440: }else
  1391  000232  D001               	goto	l2194
  1392  000234                     l253:
  1393                           
  1394                           ; BSR set to: 0
  1395                           ;system.c: 441: {
  1396                           ;system.c: 442: PORTBbits.RB1 = 1 ;
  1397  000234  8281               	bsf	3969,1,c	;volatile
  1398  000236                     l2194:
  1399                           
  1400                           ; BSR set to: 0
  1401  000236  0EE8               	movlw	232
  1402  000238  0100               	movlb	0	; () banked
  1403  00023A  2585               	addwf	ProcessHeat@countHeatTime& (0+255),w,b
  1404  00023C  0100               	movlb	0	; () banked
  1405  00023E  6F80               	movwf	??_ProcessHeat& (0+255),b
  1406  000240  0E03               	movlw	3
  1407  000242  0100               	movlb	0	; () banked
  1408  000244  2186               	addwfc	(ProcessHeat@countHeatTime+1)& (0+255),w,b
  1409  000246  0100               	movlb	0	; () banked
  1410  000248  6F81               	movwf	(??_ProcessHeat+1)& (0+255),b
  1411  00024A  0E00               	movlw	0
  1412  00024C  0100               	movlb	0	; () banked
  1413  00024E  2187               	addwfc	(ProcessHeat@countHeatTime+2)& (0+255),w,b
  1414  000250  0100               	movlb	0	; () banked
  1415  000252  6F82               	movwf	(??_ProcessHeat+2)& (0+255),b
  1416  000254  0E00               	movlw	0
  1417  000256  0100               	movlb	0	; () banked
  1418  000258  2188               	addwfc	(ProcessHeat@countHeatTime+3)& (0+255),w,b
  1419  00025A  0100               	movlb	0	; () banked
  1420  00025C  6F83               	movwf	(??_ProcessHeat+3)& (0+255),b
  1421  00025E  0100               	movlb	0	; () banked
  1422  000260  5180               	movf	??_ProcessHeat& (0+255),w,b
  1423  000262  5C35               	subwf	_timeSystemRun,w,c
  1424  000264  0100               	movlb	0	; () banked
  1425  000266  5181               	movf	(??_ProcessHeat+1)& (0+255),w,b
  1426  000268  5836               	subwfb	_timeSystemRun+1,w,c
  1427  00026A  0100               	movlb	0	; () banked
  1428  00026C  5182               	movf	(??_ProcessHeat+2)& (0+255),w,b
  1429  00026E  5837               	subwfb	_timeSystemRun+2,w,c
  1430  000270  0100               	movlb	0	; () banked
  1431  000272  5183               	movf	(??_ProcessHeat+3)& (0+255),w,b
  1432  000274  5838               	subwfb	_timeSystemRun+3,w,c
  1433  000276  B0D8               	btfsc	status,0,c
  1434  000278  D00B               	goto	l2200
  1435  00027A  D7CB               	goto	l2188
  1436  00027C                     l2198:
  1437  00027C  503E               	movf	_levelTmpSetting,w,c
  1438                           
  1439                           ; Switch size 1, requested type "space"
  1440                           ; Number of cases is 3, Range of values is 1 to 3
  1441                           ; switch strategies available:
  1442                           ; Name         Instructions Cycles
  1443                           ; simple_byte           10     6 (average)
  1444                           ;	Chosen strategy is simple_byte
  1445  00027E  0A01               	xorlw	1	; case 1
  1446  000280  B4D8               	btfsc	status,2,c
  1447  000282  D71B               	goto	l2142
  1448  000284  0A03               	xorlw	3	; case 2
  1449  000286  B4D8               	btfsc	status,2,c
  1450  000288  D762               	goto	l2158
  1451  00028A  0A01               	xorlw	1	; case 3
  1452  00028C  B4D8               	btfsc	status,2,c
  1453  00028E  D7AA               	goto	l2176
  1454  000290                     l2200:
  1455                           
  1456                           ;system.c: 451: if ( flagStop )
  1457  000290  0100               	movlb	0	; () banked
  1458  000292  5184               	movf	ProcessHeat@flagStop& (0+255),w,b
  1459  000294  0100               	movlb	0	; () banked
  1460  000296  B4D8               	btfsc	status,2,c
  1461  000298  D6E0               	goto	l2134
  1462  00029A                     l232:
  1463                           
  1464                           ; BSR set to: 0
  1465                           ;system.c: 454: }
  1466                           ;system.c: 455: }
  1467                           ;system.c: 457: PORTBbits.RB1 = 0 ;
  1468  00029A  9281               	bcf	3969,1,c	;volatile
  1469                           
  1470                           ; BSR set to: 0
  1471  00029C  0012               	return		;funcret
  1472  00029E                     __end_of_ProcessHeat:
  1473                           	opt stack 0
  1474                           tblptru	equ	0xFF8
  1475                           postinc0	equ	0xFEE
  1476                           wreg	equ	0xFE8
  1477                           postinc2	equ	0xFDE
  1478                           postdec2	equ	0xFDD
  1479                           fsr2h	equ	0xFDA
  1480                           fsr2l	equ	0xFD9
  1481                           status	equ	0xFD8
  1482                           
  1483 ;; *************** function _WriteEEprom *****************
  1484 ;; Defined at:
  1485 ;;		line 47 in file "WAFR-01-C001 HD-debug.X/EEprom/EEprom.c"
  1486 ;; Parameters:    Size  Location     Type
  1487 ;;  addr            1    wreg     unsigned char 
  1488 ;;  data            1   22[COMRAM] unsigned char 
  1489 ;; Auto vars:     Size  Location     Type
  1490 ;;  addr            1   23[COMRAM] unsigned char 
  1491 ;; Return value:  Size  Location     Type
  1492 ;;		None               void
  1493 ;; Registers used:
  1494 ;;		wreg, status,2
  1495 ;; Tracked objects:
  1496 ;;		On entry : 0/0
  1497 ;;		On exit  : 0/0
  1498 ;;		Unchanged: 0/0
  1499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1500 ;;      Params:         1       0       0       0
  1501 ;;      Locals:         1       0       0       0
  1502 ;;      Temps:          0       0       0       0
  1503 ;;      Totals:         2       0       0       0
  1504 ;;Total ram usage:        2 bytes
  1505 ;; Hardware stack levels used:    1
  1506 ;; Hardware stack levels required when called:    1
  1507 ;; This function calls:
  1508 ;;		Nothing
  1509 ;; This function is called by:
  1510 ;;		_ProcessHeat
  1511 ;; This function uses a non-reentrant model
  1512 ;;
  1513                           
  1514                           	psect	text4
  1515  0009C6                     __ptext4:
  1516                           	opt stack 0
  1517  0009C6                     _WriteEEprom:
  1518                           	opt stack 28
  1519                           
  1520                           ; BSR set to: 0
  1521                           ;incstack = 0
  1522                           ;WriteEEprom@addr stored from wreg
  1523  0009C6  6E58               	movwf	WriteEEprom@addr,c
  1524  0009C8                     l338:
  1525                           
  1526                           ;EEprom.c: 50: while( EECON1bits.WR ) ;
  1527  0009C8  B2A6               	btfsc	4006,1,c	;volatile
  1528  0009CA  D7FE               	goto	l338
  1529                           
  1530                           ;EEprom.c: 52: EEADR = addr ;
  1531  0009CC  C058  FFA9         	movff	WriteEEprom@addr,4009	;volatile
  1532                           
  1533                           ;EEprom.c: 53: EEDATA = data ;
  1534  0009D0  C057  FFA8         	movff	WriteEEprom@data,4008	;volatile
  1535                           
  1536                           ;EEprom.c: 54: EECON1bits.EEPGD = 0 ;
  1537  0009D4  9EA6               	bcf	4006,7,c	;volatile
  1538                           
  1539                           ;EEprom.c: 56: EECON1bits.WREN = 1 ;
  1540  0009D6  84A6               	bsf	4006,2,c	;volatile
  1541                           
  1542                           ;EEprom.c: 59: INTCONbits.GIE = 0 ;
  1543  0009D8  9EF2               	bcf	intcon,7,c	;volatile
  1544                           
  1545                           ;EEprom.c: 60: EECON2 = 0X55;
  1546  0009DA  0E55               	movlw	85
  1547  0009DC  6EA7               	movwf	4007,c	;volatile
  1548                           
  1549                           ;EEprom.c: 61: EECON2 = 0XAA;
  1550  0009DE  0EAA               	movlw	170
  1551  0009E0  6EA7               	movwf	4007,c	;volatile
  1552                           
  1553                           ;EEprom.c: 62: EECON1bits.WR = 1 ;
  1554  0009E2  82A6               	bsf	4006,1,c	;volatile
  1555                           
  1556                           ;EEprom.c: 63: INTCONbits.GIE = 1 ;
  1557  0009E4  8EF2               	bsf	intcon,7,c	;volatile
  1558  0009E6                     l1958:
  1559                           
  1560                           ;EEprom.c: 66: while( EECON1bits.WR) ;
  1561  0009E6  B2A6               	btfsc	4006,1,c	;volatile
  1562  0009E8  D7FE               	goto	l1958
  1563                           
  1564                           ;EEprom.c: 67: EECON1bits.WREN = 0 ;
  1565  0009EA  94A6               	bcf	4006,2,c	;volatile
  1566  0009EC  0012               	return		;funcret
  1567  0009EE                     __end_of_WriteEEprom:
  1568                           	opt stack 0
  1569                           tblptru	equ	0xFF8
  1570                           intcon	equ	0xFF2
  1571                           postinc0	equ	0xFEE
  1572                           wreg	equ	0xFE8
  1573                           postinc2	equ	0xFDE
  1574                           postdec2	equ	0xFDD
  1575                           fsr2h	equ	0xFDA
  1576                           fsr2l	equ	0xFD9
  1577                           status	equ	0xFD8
  1578                           
  1579 ;; *************** function _ReadEEprom *****************
  1580 ;; Defined at:
  1581 ;;		line 79 in file "WAFR-01-C001 HD-debug.X/EEprom/EEprom.c"
  1582 ;; Parameters:    Size  Location     Type
  1583 ;;  addr            1    wreg     unsigned char 
  1584 ;; Auto vars:     Size  Location     Type
  1585 ;;  addr            1   22[COMRAM] unsigned char 
  1586 ;; Return value:  Size  Location     Type
  1587 ;;                  1    wreg      unsigned char 
  1588 ;; Registers used:
  1589 ;;		wreg, status,2
  1590 ;; Tracked objects:
  1591 ;;		On entry : 0/0
  1592 ;;		On exit  : 0/0
  1593 ;;		Unchanged: 0/0
  1594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1595 ;;      Params:         0       0       0       0
  1596 ;;      Locals:         1       0       0       0
  1597 ;;      Temps:          0       0       0       0
  1598 ;;      Totals:         1       0       0       0
  1599 ;;Total ram usage:        1 bytes
  1600 ;; Hardware stack levels used:    1
  1601 ;; Hardware stack levels required when called:    1
  1602 ;; This function calls:
  1603 ;;		Nothing
  1604 ;; This function is called by:
  1605 ;;		_main
  1606 ;;		_ProcessHeat
  1607 ;; This function uses a non-reentrant model
  1608 ;;
  1609                           
  1610                           	psect	text5
  1611  000A82                     __ptext5:
  1612                           	opt stack 0
  1613  000A82                     _ReadEEprom:
  1614                           	opt stack 29
  1615                           
  1616                           ;incstack = 0
  1617                           ;ReadEEprom@addr stored from wreg
  1618  000A82  6E57               	movwf	ReadEEprom@addr,c
  1619  000A84                     l345:
  1620                           
  1621                           ;EEprom.c: 82: while( EECON1bits.RD ) ;
  1622  000A84  B0A6               	btfsc	4006,0,c	;volatile
  1623  000A86  D7FE               	goto	l345
  1624                           
  1625                           ;EEprom.c: 84: EEADR = addr ;
  1626  000A88  C057  FFA9         	movff	ReadEEprom@addr,4009	;volatile
  1627                           
  1628                           ;EEprom.c: 85: EECON1bits.EEPGD = 0 ;
  1629  000A8C  9EA6               	bcf	4006,7,c	;volatile
  1630                           
  1631                           ;EEprom.c: 87: EECON1bits.RD = 1 ;
  1632  000A8E  80A6               	bsf	4006,0,c	;volatile
  1633  000A90                     l1932:
  1634                           
  1635                           ;EEprom.c: 89: while ( EECON1bits.RD ) ;
  1636  000A90  B0A6               	btfsc	4006,0,c	;volatile
  1637  000A92  D7FE               	goto	l1932
  1638                           
  1639                           ;EEprom.c: 91: return( EEDATA );
  1640  000A94  50A8               	movf	4008,w,c	;volatile
  1641  000A96  0012               	return		;funcret
  1642  000A98                     __end_of_ReadEEprom:
  1643                           	opt stack 0
  1644                           tblptru	equ	0xFF8
  1645                           intcon	equ	0xFF2
  1646                           postinc0	equ	0xFEE
  1647                           wreg	equ	0xFE8
  1648                           postinc2	equ	0xFDE
  1649                           postdec2	equ	0xFDD
  1650                           fsr2h	equ	0xFDA
  1651                           fsr2l	equ	0xFD9
  1652                           status	equ	0xFD8
  1653                           
  1654 ;; *************** function _HeatProcessLedShow *****************
  1655 ;; Defined at:
  1656 ;;		line 92 in file "WAFR-01-C001 HD-debug.X/RGBLedDisplay/RGBLedDisplay.c"
  1657 ;; Parameters:    Size  Location     Type
  1658 ;;		None
  1659 ;; Auto vars:     Size  Location     Type
  1660 ;;		None
  1661 ;; Return value:  Size  Location     Type
  1662 ;;		None               void
  1663 ;; Registers used:
  1664 ;;		wreg, status,2, status,0
  1665 ;; Tracked objects:
  1666 ;;		On entry : 0/0
  1667 ;;		On exit  : 0/0
  1668 ;;		Unchanged: 0/0
  1669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1670 ;;      Params:         0       0       0       0
  1671 ;;      Locals:         0       0       0       0
  1672 ;;      Temps:          0       0       0       0
  1673 ;;      Totals:         0       0       0       0
  1674 ;;Total ram usage:        0 bytes
  1675 ;; Hardware stack levels used:    1
  1676 ;; Hardware stack levels required when called:    1
  1677 ;; This function calls:
  1678 ;;		Nothing
  1679 ;; This function is called by:
  1680 ;;		_ProcessHeat
  1681 ;; This function uses a non-reentrant model
  1682 ;;
  1683                           
  1684                           	psect	text6
  1685  0007D6                     __ptext6:
  1686                           	opt stack 0
  1687  0007D6                     _HeatProcessLedShow:
  1688                           	opt stack 28
  1689                           
  1690                           ;RGBLedDisplay.c: 96: {
  1691                           ;RGBLedDisplay.c: 97: switch ( levelTmpSetting )
  1692                           
  1693                           ;incstack = 0
  1694                           ;RGBLedDisplay.c: 95: while(1)
  1695  0007D6  D03F               	goto	l1992
  1696  0007D8                     l1960:
  1697                           
  1698                           ;RGBLedDisplay.c: 100: if ( timerHalfSecond < 1)
  1699  0007D8  5039               	movf	_timerHalfSecond,w,c
  1700  0007DA  103A               	iorwf	_timerHalfSecond+1,w,c
  1701  0007DC  A4D8               	btfss	status,2,c
  1702  0007DE  D002               	goto	l1964
  1703                           
  1704                           ;RGBLedDisplay.c: 101: {
  1705                           ;RGBLedDisplay.c: 102: PORTCbits.RC2 = 1 ;
  1706  0007E0  8482               	bsf	3970,2,c	;volatile
  1707                           
  1708                           ;RGBLedDisplay.c: 103: }
  1709  0007E2  0012               	return	
  1710  0007E4                     l1964:
  1711                           
  1712                           ;RGBLedDisplay.c: 104: else if ( timerHalfSecond <2 )
  1713  0007E4  503A               	movf	_timerHalfSecond+1,w,c
  1714  0007E6  E106               	bnz	l1968
  1715  0007E8  0E02               	movlw	2
  1716  0007EA  5C39               	subwf	_timerHalfSecond,w,c
  1717  0007EC  B0D8               	btfsc	status,0,c
  1718  0007EE  D002               	goto	l1968
  1719                           
  1720                           ;RGBLedDisplay.c: 105: {
  1721                           ;RGBLedDisplay.c: 106: PORTCbits.RC2 = 0 ;
  1722  0007F0  9482               	bcf	3970,2,c	;volatile
  1723                           
  1724                           ;RGBLedDisplay.c: 107: }else
  1725  0007F2  0012               	return	
  1726  0007F4                     l1968:
  1727                           
  1728                           ;RGBLedDisplay.c: 108: {
  1729                           ;RGBLedDisplay.c: 109: timerHalfSecond = 0 ;
  1730  0007F4  0E00               	movlw	0
  1731  0007F6  6E3A               	movwf	_timerHalfSecond+1,c
  1732  0007F8  0E00               	movlw	0
  1733  0007FA  6E39               	movwf	_timerHalfSecond,c
  1734                           
  1735                           ;RGBLedDisplay.c: 110: }
  1736                           ;RGBLedDisplay.c: 111: break;
  1737  0007FC  0012               	return	
  1738  0007FE                     l1970:
  1739                           
  1740                           ;RGBLedDisplay.c: 113: if ( timerHalfSecond < 1)
  1741  0007FE  5039               	movf	_timerHalfSecond,w,c
  1742  000800  103A               	iorwf	_timerHalfSecond+1,w,c
  1743  000802  A4D8               	btfss	status,2,c
  1744  000804  D003               	goto	l1974
  1745                           
  1746                           ;RGBLedDisplay.c: 114: {
  1747                           ;RGBLedDisplay.c: 115: PORTCbits.RC1 = 1 ;
  1748  000806  8282               	bsf	3970,1,c	;volatile
  1749                           
  1750                           ;RGBLedDisplay.c: 116: PORTCbits.RC4 = 1;
  1751  000808  8882               	bsf	3970,4,c	;volatile
  1752                           
  1753                           ;RGBLedDisplay.c: 117: }
  1754  00080A  0012               	return	
  1755  00080C                     l1974:
  1756                           
  1757                           ;RGBLedDisplay.c: 118: else if ( timerHalfSecond < 2 )
  1758  00080C  503A               	movf	_timerHalfSecond+1,w,c
  1759  00080E  E107               	bnz	l1978
  1760  000810  0E02               	movlw	2
  1761  000812  5C39               	subwf	_timerHalfSecond,w,c
  1762  000814  B0D8               	btfsc	status,0,c
  1763  000816  D003               	goto	l1978
  1764                           
  1765                           ;RGBLedDisplay.c: 119: {
  1766                           ;RGBLedDisplay.c: 120: PORTCbits.RC1 = 0;
  1767  000818  9282               	bcf	3970,1,c	;volatile
  1768                           
  1769                           ;RGBLedDisplay.c: 121: PORTCbits.RC4 = 0;
  1770  00081A  9882               	bcf	3970,4,c	;volatile
  1771                           
  1772                           ;RGBLedDisplay.c: 122: }else
  1773  00081C  0012               	return	
  1774  00081E                     l1978:
  1775                           
  1776                           ;RGBLedDisplay.c: 123: {
  1777                           ;RGBLedDisplay.c: 124: timerHalfSecond = 0 ;
  1778  00081E  0E00               	movlw	0
  1779  000820  6E3A               	movwf	_timerHalfSecond+1,c
  1780  000822  0E00               	movlw	0
  1781  000824  6E39               	movwf	_timerHalfSecond,c
  1782                           
  1783                           ;RGBLedDisplay.c: 125: }
  1784                           ;RGBLedDisplay.c: 126: break;
  1785  000826  0012               	return	
  1786  000828                     l1980:
  1787                           
  1788                           ;RGBLedDisplay.c: 128: if ( timerHalfSecond < 1)
  1789  000828  5039               	movf	_timerHalfSecond,w,c
  1790  00082A  103A               	iorwf	_timerHalfSecond+1,w,c
  1791  00082C  A4D8               	btfss	status,2,c
  1792  00082E  D004               	goto	l1984
  1793                           
  1794                           ;RGBLedDisplay.c: 129: {
  1795                           ;RGBLedDisplay.c: 130: PORTCbits.RC0 = 1 ;
  1796  000830  8082               	bsf	3970,0,c	;volatile
  1797                           
  1798                           ;RGBLedDisplay.c: 131: PORTCbits.RC3 = 1;
  1799  000832  8682               	bsf	3970,3,c	;volatile
  1800                           
  1801                           ;RGBLedDisplay.c: 132: PORTCbits.RC6 = 1;
  1802  000834  8C82               	bsf	3970,6,c	;volatile
  1803                           
  1804                           ;RGBLedDisplay.c: 133: }
  1805  000836  0012               	return	
  1806  000838                     l1984:
  1807                           
  1808                           ;RGBLedDisplay.c: 134: else if ( timerHalfSecond < 2 )
  1809  000838  503A               	movf	_timerHalfSecond+1,w,c
  1810  00083A  E108               	bnz	l1988
  1811  00083C  0E02               	movlw	2
  1812  00083E  5C39               	subwf	_timerHalfSecond,w,c
  1813  000840  B0D8               	btfsc	status,0,c
  1814  000842  D004               	goto	l1988
  1815                           
  1816                           ;RGBLedDisplay.c: 135: {
  1817                           ;RGBLedDisplay.c: 136: PORTCbits.RC0 = 0 ;
  1818  000844  9082               	bcf	3970,0,c	;volatile
  1819                           
  1820                           ;RGBLedDisplay.c: 137: PORTCbits.RC3 = 0;
  1821  000846  9682               	bcf	3970,3,c	;volatile
  1822                           
  1823                           ;RGBLedDisplay.c: 138: PORTCbits.RC6 = 0;
  1824  000848  9C82               	bcf	3970,6,c	;volatile
  1825                           
  1826                           ;RGBLedDisplay.c: 139: }else
  1827  00084A  0012               	return	
  1828  00084C                     l1988:
  1829                           
  1830                           ;RGBLedDisplay.c: 140: {
  1831                           ;RGBLedDisplay.c: 141: timerHalfSecond = 0 ;
  1832  00084C  0E00               	movlw	0
  1833  00084E  6E3A               	movwf	_timerHalfSecond+1,c
  1834  000850  0E00               	movlw	0
  1835  000852  6E39               	movwf	_timerHalfSecond,c
  1836                           
  1837                           ;RGBLedDisplay.c: 146: }
  1838                           
  1839                           ;RGBLedDisplay.c: 145: break;
  1840                           
  1841                           ;RGBLedDisplay.c: 144: default:
  1842                           
  1843                           ;RGBLedDisplay.c: 142: }
  1844                           ;RGBLedDisplay.c: 143: break;
  1845  000854  0012               	return	
  1846  000856                     l1992:
  1847  000856  503E               	movf	_levelTmpSetting,w,c
  1848                           
  1849                           ; Switch size 1, requested type "space"
  1850                           ; Number of cases is 3, Range of values is 1 to 3
  1851                           ; switch strategies available:
  1852                           ; Name         Instructions Cycles
  1853                           ; simple_byte           10     6 (average)
  1854                           ;	Chosen strategy is simple_byte
  1855  000858  0A01               	xorlw	1	; case 1
  1856  00085A  B4D8               	btfsc	status,2,c
  1857  00085C  D7BD               	goto	l1960
  1858  00085E  0A03               	xorlw	3	; case 2
  1859  000860  B4D8               	btfsc	status,2,c
  1860  000862  D7CD               	goto	l1970
  1861  000864  0A01               	xorlw	1	; case 3
  1862  000866  A4D8               	btfss	status,2,c
  1863                           
  1864                           ;RGBLedDisplay.c: 148: break;
  1865  000868  0012               	return	
  1866  00086A  D7DE               	goto	l1980
  1867  00086C                     __end_of_HeatProcessLedShow:
  1868                           	opt stack 0
  1869                           tblptru	equ	0xFF8
  1870                           intcon	equ	0xFF2
  1871                           postinc0	equ	0xFEE
  1872                           wreg	equ	0xFE8
  1873                           postinc2	equ	0xFDE
  1874                           postdec2	equ	0xFDD
  1875                           fsr2h	equ	0xFDA
  1876                           fsr2l	equ	0xFD9
  1877                           status	equ	0xFD8
  1878                           
  1879 ;; *************** function _GetAdcAD597Value *****************
  1880 ;; Defined at:
  1881 ;;		line 509 in file "WAFR-01-C001 HD-debug.X/sys/system.c"
  1882 ;; Parameters:    Size  Location     Type
  1883 ;;  channelNumbe    1    wreg     unsigned char 
  1884 ;; Auto vars:     Size  Location     Type
  1885 ;;  channelNumbe    1   35[COMRAM] unsigned char 
  1886 ;;  temp            2   36[COMRAM] unsigned short 
  1887 ;;  i               1   38[COMRAM] unsigned char 
  1888 ;; Return value:  Size  Location     Type
  1889 ;;                  2   31[COMRAM] unsigned short 
  1890 ;; Registers used:
  1891 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1892 ;; Tracked objects:
  1893 ;;		On entry : 0/0
  1894 ;;		On exit  : 0/0
  1895 ;;		Unchanged: 0/0
  1896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1897 ;;      Params:         2       0       0       0
  1898 ;;      Locals:         4       0       0       0
  1899 ;;      Temps:          2       0       0       0
  1900 ;;      Totals:         8       0       0       0
  1901 ;;Total ram usage:        8 bytes
  1902 ;; Hardware stack levels used:    1
  1903 ;; Hardware stack levels required when called:    3
  1904 ;; This function calls:
  1905 ;;		_AD_Converter
  1906 ;;		___lwdiv
  1907 ;; This function is called by:
  1908 ;;		_ProcessHeat
  1909 ;; This function uses a non-reentrant model
  1910 ;;
  1911                           
  1912                           	psect	text7
  1913  000730                     __ptext7:
  1914                           	opt stack 0
  1915  000730                     _GetAdcAD597Value:
  1916                           	opt stack 26
  1917                           
  1918                           ;incstack = 0
  1919                           ;GetAdcAD597Value@channelNumber stored from wreg
  1920  000730  6E64               	movwf	GetAdcAD597Value@channelNumber,c
  1921                           
  1922                           ;system.c: 511: uint8 i;
  1923                           ;system.c: 512: uint16 temp = 0 ;
  1924  000732  0E00               	movlw	0
  1925  000734  6E66               	movwf	GetAdcAD597Value@temp+1,c
  1926  000736  0E00               	movlw	0
  1927  000738  6E65               	movwf	GetAdcAD597Value@temp,c
  1928                           
  1929                           ;system.c: 515: for ( i=0; i< ( 10-1) ;i++)
  1930  00073A  0E00               	movlw	0
  1931  00073C  6E67               	movwf	GetAdcAD597Value@i,c
  1932  00073E                     l1996:
  1933  00073E  0E08               	movlw	8
  1934  000740  6467               	cpfsgt	GetAdcAD597Value@i,c
  1935  000742  D001               	goto	l2000
  1936  000744  D01E               	goto	l2006
  1937  000746                     l2000:
  1938                           
  1939                           ;system.c: 516: {
  1940                           ;system.c: 517: adcAD597Value[i] = adcAD597Value[i+1] ;
  1941  000746  5067               	movf	GetAdcAD597Value@i,w,c
  1942  000748  6E62               	movwf	??_GetAdcAD597Value& (0+255),c
  1943  00074A  6A63               	clrf	(??_GetAdcAD597Value+1)& (0+255),c
  1944  00074C  90D8               	bcf	status,0,c
  1945  00074E  3662               	rlcf	??_GetAdcAD597Value,f,c
  1946  000750  3663               	rlcf	??_GetAdcAD597Value+1,f,c
  1947  000752  0E02               	movlw	2
  1948  000754  2662               	addwf	??_GetAdcAD597Value,f,c
  1949  000756  0E00               	movlw	0
  1950  000758  2263               	addwfc	??_GetAdcAD597Value+1,f,c
  1951  00075A  0E01               	movlw	low _adcAD597Value
  1952  00075C  2462               	addwf	??_GetAdcAD597Value,w,c
  1953  00075E  6ED9               	movwf	fsr2l,c
  1954  000760  0E00               	movlw	high _adcAD597Value
  1955  000762  2063               	addwfc	??_GetAdcAD597Value+1,w,c
  1956  000764  6EDA               	movwf	fsr2h,c
  1957  000766  5067               	movf	GetAdcAD597Value@i,w,c
  1958  000768  0D02               	mullw	2
  1959  00076A  0E01               	movlw	low _adcAD597Value
  1960  00076C  24F3               	addwf	prodl,w,c
  1961  00076E  6EE1               	movwf	fsr1l,c
  1962  000770  0E00               	movlw	high _adcAD597Value
  1963  000772  20F4               	addwfc	prodh,w,c
  1964  000774  6EE2               	movwf	fsr1h,c
  1965  000776  CFDE FFE6          	movff	postinc2,postinc1
  1966  00077A  CFDD FFE5          	movff	postdec2,postdec1
  1967  00077E  2A67               	incf	GetAdcAD597Value@i,f,c
  1968  000780  D7DE               	goto	l1996
  1969  000782                     l2006:
  1970                           
  1971                           ;system.c: 518: }
  1972                           ;system.c: 520: adcAD597Value[10-1] = AD_Converter( channelNumber ) ;
  1973  000782  5064               	movf	GetAdcAD597Value@channelNumber,w,c
  1974  000784  ECA5  F004         	call	_AD_Converter
  1975  000788  C059  F013         	movff	?_AD_Converter,_adcAD597Value+18
  1976  00078C  C05A  F014         	movff	?_AD_Converter+1,_adcAD597Value+19
  1977                           
  1978                           ;system.c: 522: for ( i=0 ;i<10 ;i++)
  1979  000790  0E00               	movlw	0
  1980  000792  6E67               	movwf	GetAdcAD597Value@i,c
  1981  000794                     l2010:
  1982  000794  0E09               	movlw	9
  1983  000796  6467               	cpfsgt	GetAdcAD597Value@i,c
  1984  000798  D001               	goto	l2014
  1985  00079A  D00E               	goto	l2020
  1986  00079C                     l2014:
  1987                           
  1988                           ;system.c: 523: {
  1989                           ;system.c: 524: temp += adcAD597Value[i] ;
  1990  00079C  5067               	movf	GetAdcAD597Value@i,w,c
  1991  00079E  0D02               	mullw	2
  1992  0007A0  0E01               	movlw	low _adcAD597Value
  1993  0007A2  24F3               	addwf	prodl,w,c
  1994  0007A4  6ED9               	movwf	fsr2l,c
  1995  0007A6  0E00               	movlw	high _adcAD597Value
  1996  0007A8  20F4               	addwfc	prodh,w,c
  1997  0007AA  6EDA               	movwf	fsr2h,c
  1998  0007AC  50DE               	movf	postinc2,w,c
  1999  0007AE  2665               	addwf	GetAdcAD597Value@temp,f,c
  2000  0007B0  50DD               	movf	postdec2,w,c
  2001  0007B2  2266               	addwfc	GetAdcAD597Value@temp+1,f,c
  2002  0007B4  2A67               	incf	GetAdcAD597Value@i,f,c
  2003  0007B6  D7EE               	goto	l2010
  2004  0007B8                     l2020:
  2005                           
  2006                           ;system.c: 525: }
  2007                           ;system.c: 527: return ( temp/10 );
  2008  0007B8  C065  F057         	movff	GetAdcAD597Value@temp,___lwdiv@dividend
  2009  0007BC  C066  F058         	movff	GetAdcAD597Value@temp+1,___lwdiv@dividend+1
  2010  0007C0  0E00               	movlw	0
  2011  0007C2  6E5A               	movwf	___lwdiv@divisor+1,c
  2012  0007C4  0E0A               	movlw	10
  2013  0007C6  6E59               	movwf	___lwdiv@divisor,c
  2014  0007C8  EC36  F004         	call	___lwdiv	;wreg free
  2015  0007CC  C057  F060         	movff	?___lwdiv,?_GetAdcAD597Value
  2016  0007D0  C058  F061         	movff	?___lwdiv+1,?_GetAdcAD597Value+1
  2017  0007D4  0012               	return	
  2018  0007D6                     __end_of_GetAdcAD597Value:
  2019                           	opt stack 0
  2020                           tblptru	equ	0xFF8
  2021                           prodh	equ	0xFF4
  2022                           prodl	equ	0xFF3
  2023                           intcon	equ	0xFF2
  2024                           postinc0	equ	0xFEE
  2025                           wreg	equ	0xFE8
  2026                           postinc1	equ	0xFE6
  2027                           postdec1	equ	0xFE5
  2028                           fsr1h	equ	0xFE2
  2029                           fsr1l	equ	0xFE1
  2030                           postinc2	equ	0xFDE
  2031                           postdec2	equ	0xFDD
  2032                           fsr2h	equ	0xFDA
  2033                           fsr2l	equ	0xFD9
  2034                           status	equ	0xFD8
  2035                           
  2036 ;; *************** function _ProcessButton *****************
  2037 ;; Defined at:
  2038 ;;		line 42 in file "WAFR-01-C001 HD-debug.X/keyboard/keyboard.c"
  2039 ;; Parameters:    Size  Location     Type
  2040 ;;		None
  2041 ;; Auto vars:     Size  Location     Type
  2042 ;;  buttonPushPe    4   26[COMRAM] unsigned long 
  2043 ;; Return value:  Size  Location     Type
  2044 ;;                  1    wreg      unsigned char 
  2045 ;; Registers used:
  2046 ;;		wreg, status,2, status,0, cstack
  2047 ;; Tracked objects:
  2048 ;;		On entry : 0/0
  2049 ;;		On exit  : 0/0
  2050 ;;		Unchanged: 0/0
  2051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2052 ;;      Params:         0       0       0       0
  2053 ;;      Locals:         4       0       0       0
  2054 ;;      Temps:          4       0       0       0
  2055 ;;      Totals:         8       0       0       0
  2056 ;;Total ram usage:        8 bytes
  2057 ;; Hardware stack levels used:    1
  2058 ;; Hardware stack levels required when called:    3
  2059 ;; This function calls:
  2060 ;;		_LevelTmpSetShow
  2061 ;; This function is called by:
  2062 ;;		_main
  2063 ;; This function uses a non-reentrant model
  2064 ;;
  2065                           
  2066                           	psect	text8
  2067  0005C2                     __ptext8:
  2068                           	opt stack 0
  2069  0005C2                     _ProcessButton:
  2070                           	opt stack 27
  2071                           
  2072                           ;keyboard.c: 44: uint32 buttonPushPeriod = 0 ;
  2073                           
  2074                           ;incstack = 0
  2075  0005C2  0E00               	movlw	0
  2076  0005C4  6E5B               	movwf	ProcessButton@buttonPushPeriod,c
  2077  0005C6  0E00               	movlw	0
  2078  0005C8  6E5C               	movwf	ProcessButton@buttonPushPeriod+1,c
  2079  0005CA  0E00               	movlw	0
  2080  0005CC  6E5D               	movwf	ProcessButton@buttonPushPeriod+2,c
  2081  0005CE  0E00               	movlw	0
  2082  0005D0  6E5E               	movwf	ProcessButton@buttonPushPeriod+3,c
  2083                           
  2084                           ;keyboard.c: 46: if ( flagS2KeyPushed )
  2085  0005D2  503D               	movf	_flagS2KeyPushed,w,c
  2086  0005D4  B4D8               	btfsc	status,2,c
  2087  0005D6  D051               	goto	l2118
  2088                           
  2089                           ;keyboard.c: 47: {
  2090                           ;keyboard.c: 48: flagS2KeyPushed = 0 ;
  2091  0005D8  0E00               	movlw	0
  2092  0005DA  6E3D               	movwf	_flagS2KeyPushed,c
  2093                           
  2094                           ;keyboard.c: 52: buttonPushPeriod = buttonPushTimeStop-buttonPushTimeStart ;
  2095  0005DC  C029  F057         	movff	_buttonPushTimeStart,??_ProcessButton
  2096  0005E0  C02A  F058         	movff	_buttonPushTimeStart+1,??_ProcessButton+1
  2097  0005E4  C02B  F059         	movff	_buttonPushTimeStart+2,??_ProcessButton+2
  2098  0005E8  C02C  F05A         	movff	_buttonPushTimeStart+3,??_ProcessButton+3
  2099  0005EC  1E57               	comf	??_ProcessButton,f,c
  2100  0005EE  1E58               	comf	??_ProcessButton+1,f,c
  2101  0005F0  1E59               	comf	??_ProcessButton+2,f,c
  2102  0005F2  1E5A               	comf	??_ProcessButton+3,f,c
  2103  0005F4  2A57               	incf	??_ProcessButton,f,c
  2104  0005F6  0E00               	movlw	0
  2105  0005F8  2258               	addwfc	??_ProcessButton+1,f,c
  2106  0005FA  2259               	addwfc	??_ProcessButton+2,f,c
  2107  0005FC  225A               	addwfc	??_ProcessButton+3,f,c
  2108  0005FE  502D               	movf	_buttonPushTimeStop,w,c
  2109  000600  2457               	addwf	??_ProcessButton,w,c
  2110  000602  6E5B               	movwf	ProcessButton@buttonPushPeriod,c
  2111  000604  502E               	movf	_buttonPushTimeStop+1,w,c
  2112  000606  2058               	addwfc	??_ProcessButton+1,w,c
  2113  000608  6E5C               	movwf	ProcessButton@buttonPushPeriod+1,c
  2114  00060A  502F               	movf	_buttonPushTimeStop+2,w,c
  2115  00060C  2059               	addwfc	??_ProcessButton+2,w,c
  2116  00060E  6E5D               	movwf	ProcessButton@buttonPushPeriod+2,c
  2117  000610  5030               	movf	_buttonPushTimeStop+3,w,c
  2118  000612  205A               	addwfc	??_ProcessButton+3,w,c
  2119  000614  6E5E               	movwf	ProcessButton@buttonPushPeriod+3,c
  2120                           
  2121                           ;keyboard.c: 57: if ( S2KeyPushTime < 12 )
  2122  000616  0E0C               	movlw	12
  2123  000618  603B               	cpfslt	_S2KeyPushTime,c
  2124  00061A  D00B               	goto	l2088
  2125                           
  2126                           ;keyboard.c: 58: {
  2127                           ;keyboard.c: 60: levelTmpSetting ++ ;
  2128  00061C  2A3E               	incf	_levelTmpSetting,f,c
  2129                           
  2130                           ;keyboard.c: 61: if ( levelTmpSetting > 3 )
  2131  00061E  0E03               	movlw	3
  2132  000620  643E               	cpfsgt	_levelTmpSetting,c
  2133  000622  D002               	goto	l450
  2134                           
  2135                           ;keyboard.c: 62: {
  2136                           ;keyboard.c: 63: levelTmpSetting = 1 ;
  2137  000624  0E01               	movlw	1
  2138  000626  6E3E               	movwf	_levelTmpSetting,c
  2139  000628                     l450:
  2140                           
  2141                           ;keyboard.c: 64: }
  2142                           ;keyboard.c: 66: timerHalfSecond = 0 ;
  2143  000628  0E00               	movlw	0
  2144  00062A  6E3A               	movwf	_timerHalfSecond+1,c
  2145  00062C  0E00               	movlw	0
  2146  00062E  6E39               	movwf	_timerHalfSecond,c
  2147                           
  2148                           ;keyboard.c: 70: }
  2149  000630  D002               	goto	l2092
  2150  000632                     l2088:
  2151                           
  2152                           ;keyboard.c: 71: else
  2153                           ;keyboard.c: 72: {
  2154                           ;keyboard.c: 74: return ( 3 ) ;
  2155  000632  0E03               	movlw	3
  2156  000634  0012               	return	
  2157  000636                     l2092:
  2158                           
  2159                           ;keyboard.c: 75: }
  2160                           ;keyboard.c: 81: if( buttonPushPeriod < 50 )
  2161  000636  505E               	movf	ProcessButton@buttonPushPeriod+3,w,c
  2162  000638  105D               	iorwf	ProcessButton@buttonPushPeriod+2,w,c
  2163  00063A  105C               	iorwf	ProcessButton@buttonPushPeriod+1,w,c
  2164  00063C  E114               	bnz	l453
  2165  00063E  0E32               	movlw	50
  2166  000640  5C5B               	subwf	ProcessButton@buttonPushPeriod,w,c
  2167  000642  B0D8               	btfsc	status,0,c
  2168  000644  D010               	goto	l453
  2169                           
  2170                           ;keyboard.c: 82: {
  2171                           ;keyboard.c: 86: levelTmpSetting -- ;
  2172  000646  063E               	decf	_levelTmpSetting,f,c
  2173                           
  2174                           ;keyboard.c: 87: if (levelTmpSetting < 1 )
  2175  000648  503E               	movf	_levelTmpSetting,w,c
  2176  00064A  A4D8               	btfss	status,2,c
  2177  00064C  D002               	goto	l2100
  2178                           
  2179                           ;keyboard.c: 88: {
  2180                           ;keyboard.c: 89: levelTmpSetting = 3 ;
  2181  00064E  0E03               	movlw	3
  2182  000650  6E3E               	movwf	_levelTmpSetting,c
  2183  000652                     l2100:
  2184                           
  2185                           ;keyboard.c: 90: }
  2186                           ;keyboard.c: 97: levelTmpSetting -- ;
  2187  000652  063E               	decf	_levelTmpSetting,f,c
  2188                           
  2189                           ;keyboard.c: 98: if (levelTmpSetting < 1 )
  2190  000654  503E               	movf	_levelTmpSetting,w,c
  2191  000656  A4D8               	btfss	status,2,c
  2192  000658  D002               	goto	l2106
  2193                           
  2194                           ;keyboard.c: 99: {
  2195                           ;keyboard.c: 100: levelTmpSetting = 3 ;
  2196  00065A  0E03               	movlw	3
  2197  00065C  6E3E               	movwf	_levelTmpSetting,c
  2198  00065E                     l2106:
  2199                           
  2200                           ;keyboard.c: 101: }
  2201                           ;keyboard.c: 103: LevelTmpSetShow ();
  2202  00065E  EC82  F004         	call	_LevelTmpSetShow	;wreg free
  2203                           
  2204                           ;keyboard.c: 104: return ( 2 );
  2205  000662  0E02               	movlw	2
  2206  000664  0012               	return	
  2207  000666                     l453:
  2208                           
  2209                           ;keyboard.c: 106: {
  2210                           ;keyboard.c: 107: buttonPushTimeStart = buttonPushTimeStop ;
  2211  000666  C02D  F029         	movff	_buttonPushTimeStop,_buttonPushTimeStart
  2212  00066A  C02E  F02A         	movff	_buttonPushTimeStop+1,_buttonPushTimeStart+1
  2213  00066E  C02F  F02B         	movff	_buttonPushTimeStop+2,_buttonPushTimeStart+2
  2214  000672  C030  F02C         	movff	_buttonPushTimeStop+3,_buttonPushTimeStart+3
  2215                           
  2216                           ;keyboard.c: 113: return ( 1) ;
  2217  000676  0E01               	movlw	1
  2218  000678  0012               	return	
  2219  00067A                     l2118:
  2220                           
  2221                           ;keyboard.c: 114: }
  2222                           ;keyboard.c: 116: }
  2223                           ;keyboard.c: 118: return ( 0 );
  2224  00067A  0E00               	movlw	0
  2225  00067C  0012               	return	
  2226  00067E                     __end_of_ProcessButton:
  2227                           	opt stack 0
  2228                           tblptru	equ	0xFF8
  2229                           prodh	equ	0xFF4
  2230                           prodl	equ	0xFF3
  2231                           intcon	equ	0xFF2
  2232                           postinc0	equ	0xFEE
  2233                           wreg	equ	0xFE8
  2234                           postinc1	equ	0xFE6
  2235                           postdec1	equ	0xFE5
  2236                           fsr1h	equ	0xFE2
  2237                           fsr1l	equ	0xFE1
  2238                           postinc2	equ	0xFDE
  2239                           postdec2	equ	0xFDD
  2240                           fsr2h	equ	0xFDA
  2241                           fsr2l	equ	0xFD9
  2242                           status	equ	0xFD8
  2243                           
  2244 ;; *************** function _LevelTmpSetShow *****************
  2245 ;; Defined at:
  2246 ;;		line 32 in file "WAFR-01-C001 HD-debug.X/RGBLedDisplay/RGBLedDisplay.c"
  2247 ;; Parameters:    Size  Location     Type
  2248 ;;		None
  2249 ;; Auto vars:     Size  Location     Type
  2250 ;;		None
  2251 ;; Return value:  Size  Location     Type
  2252 ;;		None               void
  2253 ;; Registers used:
  2254 ;;		wreg, status,2, status,0, cstack
  2255 ;; Tracked objects:
  2256 ;;		On entry : 0/0
  2257 ;;		On exit  : 0/0
  2258 ;;		Unchanged: 0/0
  2259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2260 ;;      Params:         0       0       0       0
  2261 ;;      Locals:         0       0       0       0
  2262 ;;      Temps:          0       0       0       0
  2263 ;;      Totals:         0       0       0       0
  2264 ;;Total ram usage:        0 bytes
  2265 ;; Hardware stack levels used:    1
  2266 ;; Hardware stack levels required when called:    2
  2267 ;; This function calls:
  2268 ;;		_turnOffAllLed
  2269 ;; This function is called by:
  2270 ;;		_main
  2271 ;;		_ProcessButton
  2272 ;;		_InitializeHardware
  2273 ;; This function uses a non-reentrant model
  2274 ;;
  2275                           
  2276                           	psect	text9
  2277  000904                     __ptext9:
  2278                           	opt stack 0
  2279  000904                     _LevelTmpSetShow:
  2280                           	opt stack 27
  2281                           
  2282                           ;RGBLedDisplay.c: 35: turnOffAllLed();
  2283                           
  2284                           ;incstack = 0
  2285  000904  EC4C  F005         	call	_turnOffAllLed	;wreg free
  2286                           
  2287                           ;RGBLedDisplay.c: 36: switch ( levelTmpSetting )
  2288  000908  D015               	goto	l1938
  2289  00090A                     l391:
  2290                           
  2291                           ;RGBLedDisplay.c: 39: PORTCbits.RC0 = 1 ;
  2292  00090A  8082               	bsf	3970,0,c	;volatile
  2293                           
  2294                           ;RGBLedDisplay.c: 40: PORTCbits.RC1 = 1 ;
  2295  00090C  8282               	bsf	3970,1,c	;volatile
  2296                           
  2297                           ;RGBLedDisplay.c: 41: PORTCbits.RC2 = 1 ;
  2298  00090E  8482               	bsf	3970,2,c	;volatile
  2299                           
  2300                           ;RGBLedDisplay.c: 42: break;
  2301  000910  0012               	return	
  2302  000912                     l393:
  2303                           
  2304                           ;RGBLedDisplay.c: 44: PORTCbits.RC0 = 1 ;
  2305  000912  8082               	bsf	3970,0,c	;volatile
  2306                           
  2307                           ;RGBLedDisplay.c: 45: PORTCbits.RC1 = 1 ;
  2308  000914  8282               	bsf	3970,1,c	;volatile
  2309                           
  2310                           ;RGBLedDisplay.c: 46: PORTCbits.RC2 = 1 ;
  2311  000916  8482               	bsf	3970,2,c	;volatile
  2312                           
  2313                           ;RGBLedDisplay.c: 47: PORTCbits.RC3 = 1 ;
  2314  000918  8682               	bsf	3970,3,c	;volatile
  2315                           
  2316                           ;RGBLedDisplay.c: 48: PORTCbits.RC4 = 1 ;
  2317  00091A  8882               	bsf	3970,4,c	;volatile
  2318                           
  2319                           ;RGBLedDisplay.c: 49: PORTCbits.RC5 = 1 ;
  2320  00091C  8A82               	bsf	3970,5,c	;volatile
  2321                           
  2322                           ;RGBLedDisplay.c: 50: break;
  2323  00091E  0012               	return	
  2324  000920                     l394:
  2325                           
  2326                           ;RGBLedDisplay.c: 52: PORTCbits.RC0 = 1 ;
  2327  000920  8082               	bsf	3970,0,c	;volatile
  2328                           
  2329                           ;RGBLedDisplay.c: 53: PORTCbits.RC1 = 1 ;
  2330  000922  8282               	bsf	3970,1,c	;volatile
  2331                           
  2332                           ;RGBLedDisplay.c: 54: PORTCbits.RC2 = 1 ;
  2333  000924  8482               	bsf	3970,2,c	;volatile
  2334                           
  2335                           ;RGBLedDisplay.c: 55: PORTCbits.RC3 = 1 ;
  2336  000926  8682               	bsf	3970,3,c	;volatile
  2337                           
  2338                           ;RGBLedDisplay.c: 56: PORTCbits.RC4 = 1 ;
  2339  000928  8882               	bsf	3970,4,c	;volatile
  2340                           
  2341                           ;RGBLedDisplay.c: 57: PORTCbits.RC5 = 1 ;
  2342  00092A  8A82               	bsf	3970,5,c	;volatile
  2343                           
  2344                           ;RGBLedDisplay.c: 58: PORTCbits.RC6 = 1 ;
  2345  00092C  8C82               	bsf	3970,6,c	;volatile
  2346                           
  2347                           ;RGBLedDisplay.c: 59: PORTCbits.RC7 = 1 ;
  2348  00092E  8E82               	bsf	3970,7,c	;volatile
  2349                           
  2350                           ;RGBLedDisplay.c: 60: PORTBbits.RB3 = 1 ;
  2351  000930  8681               	bsf	3969,3,c	;volatile
  2352                           
  2353                           ;RGBLedDisplay.c: 64: }
  2354                           
  2355                           ;RGBLedDisplay.c: 63: break;
  2356                           
  2357                           ;RGBLedDisplay.c: 62: default:
  2358                           
  2359                           ;RGBLedDisplay.c: 61: break;
  2360  000932  0012               	return	
  2361  000934                     l1938:
  2362  000934  503E               	movf	_levelTmpSetting,w,c
  2363                           
  2364                           ; Switch size 1, requested type "space"
  2365                           ; Number of cases is 3, Range of values is 1 to 3
  2366                           ; switch strategies available:
  2367                           ; Name         Instructions Cycles
  2368                           ; simple_byte           10     6 (average)
  2369                           ;	Chosen strategy is simple_byte
  2370  000936  0A01               	xorlw	1	; case 1
  2371  000938  B4D8               	btfsc	status,2,c
  2372  00093A  D7E7               	goto	l391
  2373  00093C  0A03               	xorlw	3	; case 2
  2374  00093E  B4D8               	btfsc	status,2,c
  2375  000940  D7E8               	goto	l393
  2376  000942  0A01               	xorlw	1	; case 3
  2377  000944  A4D8               	btfss	status,2,c
  2378  000946  0012               	return	
  2379  000948  D7EB               	goto	l394
  2380  00094A                     __end_of_LevelTmpSetShow:
  2381                           	opt stack 0
  2382                           tblptru	equ	0xFF8
  2383                           prodh	equ	0xFF4
  2384                           prodl	equ	0xFF3
  2385                           intcon	equ	0xFF2
  2386                           postinc0	equ	0xFEE
  2387                           wreg	equ	0xFE8
  2388                           postinc1	equ	0xFE6
  2389                           postdec1	equ	0xFE5
  2390                           fsr1h	equ	0xFE2
  2391                           fsr1l	equ	0xFE1
  2392                           postinc2	equ	0xFDE
  2393                           postdec2	equ	0xFDD
  2394                           fsr2h	equ	0xFDA
  2395                           fsr2l	equ	0xFD9
  2396                           status	equ	0xFD8
  2397                           
  2398 ;; *************** function _turnOffAllLed *****************
  2399 ;; Defined at:
  2400 ;;		line 74 in file "WAFR-01-C001 HD-debug.X/RGBLedDisplay/RGBLedDisplay.c"
  2401 ;; Parameters:    Size  Location     Type
  2402 ;;		None
  2403 ;; Auto vars:     Size  Location     Type
  2404 ;;		None
  2405 ;; Return value:  Size  Location     Type
  2406 ;;		None               void
  2407 ;; Registers used:
  2408 ;;		wreg, status,2
  2409 ;; Tracked objects:
  2410 ;;		On entry : 0/0
  2411 ;;		On exit  : 0/0
  2412 ;;		Unchanged: 0/0
  2413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2414 ;;      Params:         0       0       0       0
  2415 ;;      Locals:         0       0       0       0
  2416 ;;      Temps:          0       0       0       0
  2417 ;;      Totals:         0       0       0       0
  2418 ;;Total ram usage:        0 bytes
  2419 ;; Hardware stack levels used:    1
  2420 ;; Hardware stack levels required when called:    1
  2421 ;; This function calls:
  2422 ;;		Nothing
  2423 ;; This function is called by:
  2424 ;;		_main
  2425 ;;		_ShutDownSystem
  2426 ;;		_ProcessHeat
  2427 ;;		_LevelTmpSetShow
  2428 ;; This function uses a non-reentrant model
  2429 ;;
  2430                           
  2431                           	psect	text10
  2432  000A98                     __ptext10:
  2433                           	opt stack 0
  2434  000A98                     _turnOffAllLed:
  2435                           	opt stack 29
  2436                           
  2437                           ;RGBLedDisplay.c: 77: PORTC = 0;
  2438                           
  2439                           ;incstack = 0
  2440  000A98  0E00               	movlw	0
  2441  000A9A  6E82               	movwf	3970,c	;volatile
  2442                           
  2443                           ;RGBLedDisplay.c: 78: PORTBbits.RB3 = 0;
  2444  000A9C  9681               	bcf	3969,3,c	;volatile
  2445  000A9E  0012               	return		;funcret
  2446  000AA0                     __end_of_turnOffAllLed:
  2447                           	opt stack 0
  2448                           tblptru	equ	0xFF8
  2449                           prodh	equ	0xFF4
  2450                           prodl	equ	0xFF3
  2451                           intcon	equ	0xFF2
  2452                           postinc0	equ	0xFEE
  2453                           wreg	equ	0xFE8
  2454                           postinc1	equ	0xFE6
  2455                           postdec1	equ	0xFE5
  2456                           fsr1h	equ	0xFE2
  2457                           fsr1l	equ	0xFE1
  2458                           postinc2	equ	0xFDE
  2459                           postdec2	equ	0xFDD
  2460                           fsr2h	equ	0xFDA
  2461                           fsr2l	equ	0xFD9
  2462                           status	equ	0xFD8
  2463                           
  2464 ;; *************** function _InitializeTimer0 *****************
  2465 ;; Defined at:
  2466 ;;		line 109 in file "WAFR-01-C001 HD-debug.X/sys/system.c"
  2467 ;; Parameters:    Size  Location     Type
  2468 ;;		None
  2469 ;; Auto vars:     Size  Location     Type
  2470 ;;		None
  2471 ;; Return value:  Size  Location     Type
  2472 ;;		None               void
  2473 ;; Registers used:
  2474 ;;		wreg, status,2
  2475 ;; Tracked objects:
  2476 ;;		On entry : 0/0
  2477 ;;		On exit  : 0/0
  2478 ;;		Unchanged: 0/0
  2479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2480 ;;      Params:         0       0       0       0
  2481 ;;      Locals:         0       0       0       0
  2482 ;;      Temps:          0       0       0       0
  2483 ;;      Totals:         0       0       0       0
  2484 ;;Total ram usage:        0 bytes
  2485 ;; Hardware stack levels used:    1
  2486 ;; Hardware stack levels required when called:    1
  2487 ;; This function calls:
  2488 ;;		Nothing
  2489 ;; This function is called by:
  2490 ;;		_main
  2491 ;; This function uses a non-reentrant model
  2492 ;;
  2493                           
  2494                           	psect	text11
  2495  000A6A                     __ptext11:
  2496                           	opt stack 0
  2497  000A6A                     _InitializeTimer0:
  2498                           	opt stack 29
  2499                           
  2500                           ;system.c: 111: T0CONbits.T08BIT = 0 ;
  2501                           
  2502                           ;incstack = 0
  2503  000A6A  9CD5               	bcf	4053,6,c	;volatile
  2504                           
  2505                           ;system.c: 112: T0CONbits.T0CS = 0 ;
  2506  000A6C  9AD5               	bcf	4053,5,c	;volatile
  2507                           
  2508                           ;system.c: 113: T0CONbits.PSA = 1 ;
  2509  000A6E  86D5               	bsf	4053,3,c	;volatile
  2510                           
  2511                           ;system.c: 115: TMR0H = (65536-40000)/256;
  2512  000A70  0E63               	movlw	99
  2513  000A72  6ED7               	movwf	4055,c	;volatile
  2514                           
  2515                           ;system.c: 116: TMR0L = (65536-40000)%256 ;
  2516  000A74  0EC0               	movlw	192
  2517  000A76  6ED6               	movwf	4054,c	;volatile
  2518                           
  2519                           ;system.c: 118: T0CONbits.TMR0ON = 1 ;
  2520  000A78  8ED5               	bsf	4053,7,c	;volatile
  2521                           
  2522                           ;system.c: 121: INTCONbits.TMR0IF = 0 ;
  2523  000A7A  94F2               	bcf	intcon,2,c	;volatile
  2524                           
  2525                           ;system.c: 122: INTCONbits.TMR0IE = 1;
  2526  000A7C  8AF2               	bsf	intcon,5,c	;volatile
  2527                           
  2528                           ;system.c: 125: INTCONbits.PEIE = 1 ;
  2529  000A7E  8CF2               	bsf	intcon,6,c	;volatile
  2530  000A80  0012               	return		;funcret
  2531  000A82                     __end_of_InitializeTimer0:
  2532                           	opt stack 0
  2533                           tblptru	equ	0xFF8
  2534                           prodh	equ	0xFF4
  2535                           prodl	equ	0xFF3
  2536                           intcon	equ	0xFF2
  2537                           postinc0	equ	0xFEE
  2538                           wreg	equ	0xFE8
  2539                           postinc1	equ	0xFE6
  2540                           postdec1	equ	0xFE5
  2541                           fsr1h	equ	0xFE2
  2542                           fsr1l	equ	0xFE1
  2543                           postinc2	equ	0xFDE
  2544                           postdec2	equ	0xFDD
  2545                           fsr2h	equ	0xFDA
  2546                           fsr2l	equ	0xFD9
  2547                           status	equ	0xFD8
  2548                           
  2549 ;; *************** function _InitializePinmux *****************
  2550 ;; Defined at:
  2551 ;;		line 63 in file "WAFR-01-C001 HD-debug.X/sys/system.c"
  2552 ;; Parameters:    Size  Location     Type
  2553 ;;		None
  2554 ;; Auto vars:     Size  Location     Type
  2555 ;;		None
  2556 ;; Return value:  Size  Location     Type
  2557 ;;		None               void
  2558 ;; Registers used:
  2559 ;;		None
  2560 ;; Tracked objects:
  2561 ;;		On entry : 0/0
  2562 ;;		On exit  : 0/0
  2563 ;;		Unchanged: 0/0
  2564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2565 ;;      Params:         0       0       0       0
  2566 ;;      Locals:         0       0       0       0
  2567 ;;      Temps:          0       0       0       0
  2568 ;;      Totals:         0       0       0       0
  2569 ;;Total ram usage:        0 bytes
  2570 ;; Hardware stack levels used:    1
  2571 ;; Hardware stack levels required when called:    1
  2572 ;; This function calls:
  2573 ;;		Nothing
  2574 ;; This function is called by:
  2575 ;;		_main
  2576 ;; This function uses a non-reentrant model
  2577 ;;
  2578                           
  2579                           	psect	text12
  2580  0009EE                     __ptext12:
  2581                           	opt stack 0
  2582  0009EE                     _InitializePinmux:
  2583                           	opt stack 29
  2584                           
  2585                           ;system.c: 66: TRISCbits.TRISC0 = 0;
  2586                           
  2587                           ;incstack = 0
  2588  0009EE  9094               	bcf	3988,0,c	;volatile
  2589                           
  2590                           ;system.c: 67: TRISCbits.TRISC1 = 0;
  2591  0009F0  9294               	bcf	3988,1,c	;volatile
  2592                           
  2593                           ;system.c: 68: TRISCbits.TRISC2 = 0;
  2594  0009F2  9494               	bcf	3988,2,c	;volatile
  2595                           
  2596                           ;system.c: 69: TRISCbits.TRISC3 = 0;
  2597  0009F4  9694               	bcf	3988,3,c	;volatile
  2598                           
  2599                           ;system.c: 70: TRISCbits.TRISC4 = 0;
  2600  0009F6  9894               	bcf	3988,4,c	;volatile
  2601                           
  2602                           ;system.c: 71: TRISCbits.TRISC5 = 0;
  2603  0009F8  9A94               	bcf	3988,5,c	;volatile
  2604                           
  2605                           ;system.c: 72: TRISCbits.TRISC6 = 0;
  2606  0009FA  9C94               	bcf	3988,6,c	;volatile
  2607                           
  2608                           ;system.c: 73: TRISCbits.TRISC7 = 0;
  2609  0009FC  9E94               	bcf	3988,7,c	;volatile
  2610                           
  2611                           ;system.c: 75: TRISBbits.TRISB3 = 0;
  2612  0009FE  9693               	bcf	3987,3,c	;volatile
  2613                           
  2614                           ;system.c: 78: TRISAbits.TRISA0 = 1 ;
  2615  000A00  8092               	bsf	3986,0,c	;volatile
  2616                           
  2617                           ;system.c: 81: TRISAbits.TRISA1 = 1;
  2618  000A02  8292               	bsf	3986,1,c	;volatile
  2619                           
  2620                           ;system.c: 83: TRISAbits.TRISA2 = 1 ;
  2621  000A04  8492               	bsf	3986,2,c	;volatile
  2622                           
  2623                           ;system.c: 84: TRISAbits.TRISA3 = 1 ;
  2624  000A06  8692               	bsf	3986,3,c	;volatile
  2625                           
  2626                           ;system.c: 87: TRISAbits.TRISA4 = 1;
  2627  000A08  8892               	bsf	3986,4,c	;volatile
  2628                           
  2629                           ;system.c: 90: TRISAbits.TRISA5 = 1;
  2630  000A0A  8A92               	bsf	3986,5,c	;volatile
  2631                           
  2632                           ;system.c: 93: TRISBbits.TRISB0 = 1;
  2633  000A0C  8093               	bsf	3987,0,c	;volatile
  2634                           
  2635                           ;system.c: 96: TRISBbits.TRISB1 = 0;
  2636  000A0E  9293               	bcf	3987,1,c	;volatile
  2637                           
  2638                           ;system.c: 99: TRISBbits.TRISB2 = 0;
  2639  000A10  9493               	bcf	3987,2,c	;volatile
  2640                           
  2641                           ;system.c: 102: TRISBbits.TRISB4 = 1;
  2642  000A12  8893               	bsf	3987,4,c	;volatile
  2643  000A14  0012               	return		;funcret
  2644  000A16                     __end_of_InitializePinmux:
  2645                           	opt stack 0
  2646                           tblptru	equ	0xFF8
  2647                           prodh	equ	0xFF4
  2648                           prodl	equ	0xFF3
  2649                           intcon	equ	0xFF2
  2650                           postinc0	equ	0xFEE
  2651                           wreg	equ	0xFE8
  2652                           postinc1	equ	0xFE6
  2653                           postdec1	equ	0xFE5
  2654                           fsr1h	equ	0xFE2
  2655                           fsr1l	equ	0xFE1
  2656                           postinc2	equ	0xFDE
  2657                           postdec2	equ	0xFDD
  2658                           fsr2h	equ	0xFDA
  2659                           fsr2l	equ	0xFD9
  2660                           status	equ	0xFD8
  2661                           
  2662 ;; *************** function _InitializeOscillator *****************
  2663 ;; Defined at:
  2664 ;;		line 24 in file "WAFR-01-C001 HD-debug.X/sys/system.c"
  2665 ;; Parameters:    Size  Location     Type
  2666 ;;		None
  2667 ;; Auto vars:     Size  Location     Type
  2668 ;;		None
  2669 ;; Return value:  Size  Location     Type
  2670 ;;		None               void
  2671 ;; Registers used:
  2672 ;;		None
  2673 ;; Tracked objects:
  2674 ;;		On entry : 0/0
  2675 ;;		On exit  : 0/0
  2676 ;;		Unchanged: 0/0
  2677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2678 ;;      Params:         0       0       0       0
  2679 ;;      Locals:         0       0       0       0
  2680 ;;      Temps:          0       0       0       0
  2681 ;;      Totals:         0       0       0       0
  2682 ;;Total ram usage:        0 bytes
  2683 ;; Hardware stack levels used:    1
  2684 ;; Hardware stack levels required when called:    1
  2685 ;; This function calls:
  2686 ;;		Nothing
  2687 ;; This function is called by:
  2688 ;;		_main
  2689 ;; This function uses a non-reentrant model
  2690 ;;
  2691                           
  2692                           	psect	text13
  2693  000AB0                     __ptext13:
  2694                           	opt stack 0
  2695  000AB0                     _InitializeOscillator:
  2696                           	opt stack 29
  2697                           
  2698                           ;incstack = 0
  2699  000AB0  0012               	return		;funcret
  2700  000AB2                     __end_of_InitializeOscillator:
  2701                           	opt stack 0
  2702                           tblptru	equ	0xFF8
  2703                           prodh	equ	0xFF4
  2704                           prodl	equ	0xFF3
  2705                           intcon	equ	0xFF2
  2706                           postinc0	equ	0xFEE
  2707                           wreg	equ	0xFE8
  2708                           postinc1	equ	0xFE6
  2709                           postdec1	equ	0xFE5
  2710                           fsr1h	equ	0xFE2
  2711                           fsr1l	equ	0xFE1
  2712                           postinc2	equ	0xFDE
  2713                           postdec2	equ	0xFDD
  2714                           fsr2h	equ	0xFDA
  2715                           fsr2l	equ	0xFD9
  2716                           status	equ	0xFD8
  2717                           
  2718 ;; *************** function _InitializeInterrupts *****************
  2719 ;; Defined at:
  2720 ;;		line 48 in file "WAFR-01-C001 HD-debug.X/sys/system.c"
  2721 ;; Parameters:    Size  Location     Type
  2722 ;;		None
  2723 ;; Auto vars:     Size  Location     Type
  2724 ;;		None
  2725 ;; Return value:  Size  Location     Type
  2726 ;;		None               void
  2727 ;; Registers used:
  2728 ;;		None
  2729 ;; Tracked objects:
  2730 ;;		On entry : 0/0
  2731 ;;		On exit  : 0/0
  2732 ;;		Unchanged: 0/0
  2733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2734 ;;      Params:         0       0       0       0
  2735 ;;      Locals:         0       0       0       0
  2736 ;;      Temps:          0       0       0       0
  2737 ;;      Totals:         0       0       0       0
  2738 ;;Total ram usage:        0 bytes
  2739 ;; Hardware stack levels used:    1
  2740 ;; Hardware stack levels required when called:    1
  2741 ;; This function calls:
  2742 ;;		Nothing
  2743 ;; This function is called by:
  2744 ;;		_main
  2745 ;; This function uses a non-reentrant model
  2746 ;;
  2747                           
  2748                           	psect	text14
  2749  000AA0                     __ptext14:
  2750                           	opt stack 0
  2751  000AA0                     _InitializeInterrupts:
  2752                           	opt stack 29
  2753                           
  2754                           ;system.c: 51: INTCONbits.INT0IE = 1;
  2755                           
  2756                           ;incstack = 0
  2757  000AA0  88F2               	bsf	intcon,4,c	;volatile
  2758                           
  2759                           ;system.c: 54: INTCONbits.TMR0IE = 1;
  2760  000AA2  8AF2               	bsf	intcon,5,c	;volatile
  2761                           
  2762                           ;system.c: 57: INTCONbits.GIE = 1;
  2763  000AA4  8EF2               	bsf	intcon,7,c	;volatile
  2764  000AA6  0012               	return		;funcret
  2765  000AA8                     __end_of_InitializeInterrupts:
  2766                           	opt stack 0
  2767                           tblptru	equ	0xFF8
  2768                           prodh	equ	0xFF4
  2769                           prodl	equ	0xFF3
  2770                           intcon	equ	0xFF2
  2771                           postinc0	equ	0xFEE
  2772                           wreg	equ	0xFE8
  2773                           postinc1	equ	0xFE6
  2774                           postdec1	equ	0xFE5
  2775                           fsr1h	equ	0xFE2
  2776                           fsr1l	equ	0xFE1
  2777                           postinc2	equ	0xFDE
  2778                           postdec2	equ	0xFDD
  2779                           fsr2h	equ	0xFDA
  2780                           fsr2l	equ	0xFD9
  2781                           status	equ	0xFD8
  2782                           
  2783 ;; *************** function _InitializeINT0 *****************
  2784 ;; Defined at:
  2785 ;;		line 165 in file "WAFR-01-C001 HD-debug.X/sys/system.c"
  2786 ;; Parameters:    Size  Location     Type
  2787 ;;		None
  2788 ;; Auto vars:     Size  Location     Type
  2789 ;;		None
  2790 ;; Return value:  Size  Location     Type
  2791 ;;		None               void
  2792 ;; Registers used:
  2793 ;;		None
  2794 ;; Tracked objects:
  2795 ;;		On entry : 0/0
  2796 ;;		On exit  : 0/0
  2797 ;;		Unchanged: 0/0
  2798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2799 ;;      Params:         0       0       0       0
  2800 ;;      Locals:         0       0       0       0
  2801 ;;      Temps:          0       0       0       0
  2802 ;;      Totals:         0       0       0       0
  2803 ;;Total ram usage:        0 bytes
  2804 ;; Hardware stack levels used:    1
  2805 ;; Hardware stack levels required when called:    1
  2806 ;; This function calls:
  2807 ;;		Nothing
  2808 ;; This function is called by:
  2809 ;;		_main
  2810 ;; This function uses a non-reentrant model
  2811 ;;
  2812                           
  2813                           	psect	text15
  2814  000AA8                     __ptext15:
  2815                           	opt stack 0
  2816  000AA8                     _InitializeINT0:
  2817                           	opt stack 29
  2818                           
  2819                           ;system.c: 167: INTCON2bits.INTEDG0 = 0 ;
  2820                           
  2821                           ;incstack = 0
  2822  000AA8  9CF1               	bcf	intcon2,6,c	;volatile
  2823                           
  2824                           ;system.c: 168: INTCONbits.INT0IF = 0 ;
  2825  000AAA  92F2               	bcf	intcon,1,c	;volatile
  2826                           
  2827                           ;system.c: 170: INTCONbits.INT0IE = 1 ;
  2828  000AAC  88F2               	bsf	intcon,4,c	;volatile
  2829  000AAE  0012               	return		;funcret
  2830  000AB0                     __end_of_InitializeINT0:
  2831                           	opt stack 0
  2832                           tblptru	equ	0xFF8
  2833                           prodh	equ	0xFF4
  2834                           prodl	equ	0xFF3
  2835                           intcon	equ	0xFF2
  2836                           intcon2	equ	0xFF1
  2837                           postinc0	equ	0xFEE
  2838                           wreg	equ	0xFE8
  2839                           postinc1	equ	0xFE6
  2840                           postdec1	equ	0xFE5
  2841                           fsr1h	equ	0xFE2
  2842                           fsr1l	equ	0xFE1
  2843                           postinc2	equ	0xFDE
  2844                           postdec2	equ	0xFDD
  2845                           fsr2h	equ	0xFDA
  2846                           fsr2l	equ	0xFD9
  2847                           status	equ	0xFD8
  2848                           
  2849 ;; *************** function _InitializeAD *****************
  2850 ;; Defined at:
  2851 ;;		line 206 in file "WAFR-01-C001 HD-debug.X/sys/system.c"
  2852 ;; Parameters:    Size  Location     Type
  2853 ;;		None
  2854 ;; Auto vars:     Size  Location     Type
  2855 ;;		None
  2856 ;; Return value:  Size  Location     Type
  2857 ;;		None               void
  2858 ;; Registers used:
  2859 ;;		None
  2860 ;; Tracked objects:
  2861 ;;		On entry : 0/0
  2862 ;;		On exit  : 0/0
  2863 ;;		Unchanged: 0/0
  2864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2865 ;;      Params:         0       0       0       0
  2866 ;;      Locals:         0       0       0       0
  2867 ;;      Temps:          0       0       0       0
  2868 ;;      Totals:         0       0       0       0
  2869 ;;Total ram usage:        0 bytes
  2870 ;; Hardware stack levels used:    1
  2871 ;; Hardware stack levels required when called:    1
  2872 ;; This function calls:
  2873 ;;		Nothing
  2874 ;; This function is called by:
  2875 ;;		_main
  2876 ;; This function uses a non-reentrant model
  2877 ;;
  2878                           
  2879                           	psect	text16
  2880  000A16                     __ptext16:
  2881                           	opt stack 0
  2882  000A16                     _InitializeAD:
  2883                           	opt stack 29
  2884                           
  2885                           ;system.c: 217: ADCON1bits.PCFG3 = 1;
  2886                           
  2887                           ;incstack = 0
  2888  000A16  86C1               	bsf	4033,3,c	;volatile
  2889                           
  2890                           ;system.c: 218: ADCON1bits.PCFG2 = 0;
  2891  000A18  94C1               	bcf	4033,2,c	;volatile
  2892                           
  2893                           ;system.c: 219: ADCON1bits.PCFG1 = 0;
  2894  000A1A  92C1               	bcf	4033,1,c	;volatile
  2895                           
  2896                           ;system.c: 220: ADCON1bits.PCFG0 = 1;
  2897  000A1C  80C1               	bsf	4033,0,c	;volatile
  2898                           
  2899                           ;system.c: 222: ADCON1bits.VCFG1 = 1 ;
  2900  000A1E  8AC1               	bsf	4033,5,c	;volatile
  2901                           
  2902                           ;system.c: 223: ADCON1bits.VCFG0 = 1 ;
  2903  000A20  88C1               	bsf	4033,4,c	;volatile
  2904                           
  2905                           ;system.c: 234: ADCON2bits.ADCS2 = 0 ;
  2906  000A22  94C0               	bcf	4032,2,c	;volatile
  2907                           
  2908                           ;system.c: 235: ADCON2bits.ADCS1 = 1 ;
  2909  000A24  82C0               	bsf	4032,1,c	;volatile
  2910                           
  2911                           ;system.c: 236: ADCON2bits.ADCS0 = 0 ;
  2912  000A26  90C0               	bcf	4032,0,c	;volatile
  2913                           
  2914                           ;system.c: 238: ADCON2bits.ADFM = 1 ;
  2915  000A28  8EC0               	bsf	4032,7,c	;volatile
  2916                           
  2917                           ;system.c: 240: ADCON2bits.ACQT2 = 1;
  2918  000A2A  8AC0               	bsf	4032,5,c	;volatile
  2919                           
  2920                           ;system.c: 241: ADCON2bits.ACQT1 = 1;
  2921  000A2C  88C0               	bsf	4032,4,c	;volatile
  2922                           
  2923                           ;system.c: 242: ADCON2bits.ACQT0 = 0;
  2924  000A2E  96C0               	bcf	4032,3,c	;volatile
  2925                           
  2926                           ;system.c: 253: ADCON0bits.ADON = 1 ;
  2927  000A30  80C2               	bsf	4034,0,c	;volatile
  2928  000A32  0012               	return		;funcret
  2929  000A34                     __end_of_InitializeAD:
  2930                           	opt stack 0
  2931                           tblptru	equ	0xFF8
  2932                           prodh	equ	0xFF4
  2933                           prodl	equ	0xFF3
  2934                           intcon	equ	0xFF2
  2935                           intcon2	equ	0xFF1
  2936                           postinc0	equ	0xFEE
  2937                           wreg	equ	0xFE8
  2938                           postinc1	equ	0xFE6
  2939                           postdec1	equ	0xFE5
  2940                           fsr1h	equ	0xFE2
  2941                           fsr1l	equ	0xFE1
  2942                           postinc2	equ	0xFDE
  2943                           postdec2	equ	0xFDD
  2944                           fsr2h	equ	0xFDA
  2945                           fsr2l	equ	0xFD9
  2946                           status	equ	0xFD8
  2947                           
  2948 ;; *************** function _GetAdcBatValue *****************
  2949 ;; Defined at:
  2950 ;;		line 475 in file "WAFR-01-C001 HD-debug.X/sys/system.c"
  2951 ;; Parameters:    Size  Location     Type
  2952 ;;  channelNumbe    1    wreg     unsigned char 
  2953 ;; Auto vars:     Size  Location     Type
  2954 ;;  channelNumbe    1   35[COMRAM] unsigned char 
  2955 ;;  temp            2   36[COMRAM] unsigned short 
  2956 ;;  i               1   38[COMRAM] unsigned char 
  2957 ;; Return value:  Size  Location     Type
  2958 ;;                  2   31[COMRAM] unsigned short 
  2959 ;; Registers used:
  2960 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2961 ;; Tracked objects:
  2962 ;;		On entry : 0/0
  2963 ;;		On exit  : 0/0
  2964 ;;		Unchanged: 0/0
  2965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2966 ;;      Params:         2       0       0       0
  2967 ;;      Locals:         4       0       0       0
  2968 ;;      Temps:          2       0       0       0
  2969 ;;      Totals:         8       0       0       0
  2970 ;;Total ram usage:        8 bytes
  2971 ;; Hardware stack levels used:    1
  2972 ;; Hardware stack levels required when called:    3
  2973 ;; This function calls:
  2974 ;;		_AD_Converter
  2975 ;;		___lwdiv
  2976 ;; This function is called by:
  2977 ;;		_main
  2978 ;; This function uses a non-reentrant model
  2979 ;;
  2980                           
  2981                           	psect	text17
  2982  00067E                     __ptext17:
  2983                           	opt stack 0
  2984  00067E                     _GetAdcBatValue:
  2985                           	opt stack 27
  2986                           
  2987                           ;incstack = 0
  2988                           ;GetAdcBatValue@channelNumber stored from wreg
  2989  00067E  6E64               	movwf	GetAdcBatValue@channelNumber,c
  2990                           
  2991                           ;system.c: 477: uint8 i;
  2992                           ;system.c: 478: uint16 temp = 0 ;
  2993  000680  0E00               	movlw	0
  2994  000682  6E66               	movwf	GetAdcBatValue@temp+1,c
  2995  000684  0E00               	movlw	0
  2996  000686  6E65               	movwf	GetAdcBatValue@temp,c
  2997                           
  2998                           ;system.c: 479: for ( i=0; i< ( 10-1) ;i++)
  2999  000688  0E00               	movlw	0
  3000  00068A  6E67               	movwf	GetAdcBatValue@i,c
  3001  00068C                     l2046:
  3002  00068C  0E08               	movlw	8
  3003  00068E  6467               	cpfsgt	GetAdcBatValue@i,c
  3004  000690  D001               	goto	l2050
  3005  000692  D01E               	goto	l2056
  3006  000694                     l2050:
  3007                           
  3008                           ;system.c: 480: {
  3009                           ;system.c: 481: adcBatValue[i] = adcBatValue[i+1] ;
  3010  000694  5067               	movf	GetAdcBatValue@i,w,c
  3011  000696  6E62               	movwf	??_GetAdcBatValue& (0+255),c
  3012  000698  6A63               	clrf	(??_GetAdcBatValue+1)& (0+255),c
  3013  00069A  90D8               	bcf	status,0,c
  3014  00069C  3662               	rlcf	??_GetAdcBatValue,f,c
  3015  00069E  3663               	rlcf	??_GetAdcBatValue+1,f,c
  3016  0006A0  0E02               	movlw	2
  3017  0006A2  2662               	addwf	??_GetAdcBatValue,f,c
  3018  0006A4  0E00               	movlw	0
  3019  0006A6  2263               	addwfc	??_GetAdcBatValue+1,f,c
  3020  0006A8  0E15               	movlw	low _adcBatValue
  3021  0006AA  2462               	addwf	??_GetAdcBatValue,w,c
  3022  0006AC  6ED9               	movwf	fsr2l,c
  3023  0006AE  0E00               	movlw	high _adcBatValue
  3024  0006B0  2063               	addwfc	??_GetAdcBatValue+1,w,c
  3025  0006B2  6EDA               	movwf	fsr2h,c
  3026  0006B4  5067               	movf	GetAdcBatValue@i,w,c
  3027  0006B6  0D02               	mullw	2
  3028  0006B8  0E15               	movlw	low _adcBatValue
  3029  0006BA  24F3               	addwf	prodl,w,c
  3030  0006BC  6EE1               	movwf	fsr1l,c
  3031  0006BE  0E00               	movlw	high _adcBatValue
  3032  0006C0  20F4               	addwfc	prodh,w,c
  3033  0006C2  6EE2               	movwf	fsr1h,c
  3034  0006C4  CFDE FFE6          	movff	postinc2,postinc1
  3035  0006C8  CFDD FFE5          	movff	postdec2,postdec1
  3036  0006CC  2A67               	incf	GetAdcBatValue@i,f,c
  3037  0006CE  D7DE               	goto	l2046
  3038  0006D0                     l2056:
  3039                           
  3040                           ;system.c: 482: }
  3041                           ;system.c: 484: adcBatValue[10-1] = AD_Converter( channelNumber ) ;
  3042  0006D0  5064               	movf	GetAdcBatValue@channelNumber,w,c
  3043  0006D2  ECA5  F004         	call	_AD_Converter
  3044  0006D6  C059  F027         	movff	?_AD_Converter,_adcBatValue+18
  3045  0006DA  C05A  F028         	movff	?_AD_Converter+1,_adcBatValue+19
  3046                           
  3047                           ;system.c: 486: for ( i=0 ;i<10 ;i++)
  3048  0006DE  0E00               	movlw	0
  3049  0006E0  6E67               	movwf	GetAdcBatValue@i,c
  3050  0006E2                     l2060:
  3051  0006E2  0E09               	movlw	9
  3052  0006E4  6467               	cpfsgt	GetAdcBatValue@i,c
  3053  0006E6  D001               	goto	l2064
  3054  0006E8  D014               	goto	l2070
  3055  0006EA                     l2064:
  3056                           
  3057                           ;system.c: 487: {
  3058                           ;system.c: 488: temp = temp + adcBatValue[i] ;
  3059  0006EA  5067               	movf	GetAdcBatValue@i,w,c
  3060  0006EC  0D02               	mullw	2
  3061  0006EE  0E15               	movlw	low _adcBatValue
  3062  0006F0  24F3               	addwf	prodl,w,c
  3063  0006F2  6ED9               	movwf	fsr2l,c
  3064  0006F4  0E00               	movlw	high _adcBatValue
  3065  0006F6  20F4               	addwfc	prodh,w,c
  3066  0006F8  6EDA               	movwf	fsr2h,c
  3067  0006FA  CFDE F062          	movff	postinc2,??_GetAdcBatValue
  3068  0006FE  CFDD F063          	movff	postdec2,??_GetAdcBatValue+1
  3069  000702  5065               	movf	GetAdcBatValue@temp,w,c
  3070  000704  2462               	addwf	??_GetAdcBatValue,w,c
  3071  000706  6E65               	movwf	GetAdcBatValue@temp,c
  3072  000708  5066               	movf	GetAdcBatValue@temp+1,w,c
  3073  00070A  2063               	addwfc	??_GetAdcBatValue+1,w,c
  3074  00070C  6E66               	movwf	GetAdcBatValue@temp+1,c
  3075  00070E  2A67               	incf	GetAdcBatValue@i,f,c
  3076  000710  D7E8               	goto	l2060
  3077  000712                     l2070:
  3078                           
  3079                           ;system.c: 489: }
  3080                           ;system.c: 491: return ( temp/10 );
  3081  000712  C065  F057         	movff	GetAdcBatValue@temp,___lwdiv@dividend
  3082  000716  C066  F058         	movff	GetAdcBatValue@temp+1,___lwdiv@dividend+1
  3083  00071A  0E00               	movlw	0
  3084  00071C  6E5A               	movwf	___lwdiv@divisor+1,c
  3085  00071E  0E0A               	movlw	10
  3086  000720  6E59               	movwf	___lwdiv@divisor,c
  3087  000722  EC36  F004         	call	___lwdiv	;wreg free
  3088  000726  C057  F060         	movff	?___lwdiv,?_GetAdcBatValue
  3089  00072A  C058  F061         	movff	?___lwdiv+1,?_GetAdcBatValue+1
  3090  00072E  0012               	return	
  3091  000730                     __end_of_GetAdcBatValue:
  3092                           	opt stack 0
  3093                           tblptru	equ	0xFF8
  3094                           prodh	equ	0xFF4
  3095                           prodl	equ	0xFF3
  3096                           intcon	equ	0xFF2
  3097                           intcon2	equ	0xFF1
  3098                           postinc0	equ	0xFEE
  3099                           wreg	equ	0xFE8
  3100                           postinc1	equ	0xFE6
  3101                           postdec1	equ	0xFE5
  3102                           fsr1h	equ	0xFE2
  3103                           fsr1l	equ	0xFE1
  3104                           postinc2	equ	0xFDE
  3105                           postdec2	equ	0xFDD
  3106                           fsr2h	equ	0xFDA
  3107                           fsr2l	equ	0xFD9
  3108                           status	equ	0xFD8
  3109                           
  3110 ;; *************** function ___lwdiv *****************
  3111 ;; Defined at:
  3112 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
  3113 ;; Parameters:    Size  Location     Type
  3114 ;;  dividend        2   22[COMRAM] unsigned int 
  3115 ;;  divisor         2   24[COMRAM] unsigned int 
  3116 ;; Auto vars:     Size  Location     Type
  3117 ;;  quotient        2   27[COMRAM] unsigned int 
  3118 ;;  counter         1   26[COMRAM] unsigned char 
  3119 ;; Return value:  Size  Location     Type
  3120 ;;                  2   22[COMRAM] unsigned int 
  3121 ;; Registers used:
  3122 ;;		wreg, status,2, status,0
  3123 ;; Tracked objects:
  3124 ;;		On entry : 0/0
  3125 ;;		On exit  : 0/0
  3126 ;;		Unchanged: 0/0
  3127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3128 ;;      Params:         4       0       0       0
  3129 ;;      Locals:         3       0       0       0
  3130 ;;      Temps:          0       0       0       0
  3131 ;;      Totals:         7       0       0       0
  3132 ;;Total ram usage:        7 bytes
  3133 ;; Hardware stack levels used:    1
  3134 ;; Hardware stack levels required when called:    1
  3135 ;; This function calls:
  3136 ;;		Nothing
  3137 ;; This function is called by:
  3138 ;;		_GetAdcBatValue
  3139 ;;		_GetAdcAD597Value
  3140 ;; This function uses a non-reentrant model
  3141 ;;
  3142                           
  3143                           	psect	text18
  3144  00086C                     __ptext18:
  3145                           	opt stack 0
  3146  00086C                     ___lwdiv:
  3147                           	opt stack 27
  3148                           
  3149                           ;incstack = 0
  3150  00086C  0E00               	movlw	0
  3151  00086E  6E5D               	movwf	___lwdiv@quotient+1,c
  3152  000870  0E00               	movlw	0
  3153  000872  6E5C               	movwf	___lwdiv@quotient,c
  3154  000874  5059               	movf	___lwdiv@divisor,w,c
  3155  000876  105A               	iorwf	___lwdiv@divisor+1,w,c
  3156  000878  B4D8               	btfsc	status,2,c
  3157  00087A  D01C               	goto	l859
  3158  00087C  0E01               	movlw	1
  3159  00087E  6E5B               	movwf	___lwdiv@counter,c
  3160  000880  D004               	goto	l1896
  3161  000882                     l1894:
  3162  000882  90D8               	bcf	status,0,c
  3163  000884  3659               	rlcf	___lwdiv@divisor,f,c
  3164  000886  365A               	rlcf	___lwdiv@divisor+1,f,c
  3165  000888  2A5B               	incf	___lwdiv@counter,f,c
  3166  00088A                     l1896:
  3167  00088A  AE5A               	btfss	___lwdiv@divisor+1,7,c
  3168  00088C  D7FA               	goto	l1894
  3169  00088E                     l1898:
  3170  00088E  90D8               	bcf	status,0,c
  3171  000890  365C               	rlcf	___lwdiv@quotient,f,c
  3172  000892  365D               	rlcf	___lwdiv@quotient+1,f,c
  3173  000894  5059               	movf	___lwdiv@divisor,w,c
  3174  000896  5C57               	subwf	___lwdiv@dividend,w,c
  3175  000898  505A               	movf	___lwdiv@divisor+1,w,c
  3176  00089A  5858               	subwfb	___lwdiv@dividend+1,w,c
  3177  00089C  A0D8               	btfss	status,0,c
  3178  00089E  D005               	goto	l1906
  3179  0008A0  5059               	movf	___lwdiv@divisor,w,c
  3180  0008A2  5E57               	subwf	___lwdiv@dividend,f,c
  3181  0008A4  505A               	movf	___lwdiv@divisor+1,w,c
  3182  0008A6  5A58               	subwfb	___lwdiv@dividend+1,f,c
  3183  0008A8  805C               	bsf	___lwdiv@quotient,0,c
  3184  0008AA                     l1906:
  3185  0008AA  90D8               	bcf	status,0,c
  3186  0008AC  325A               	rrcf	___lwdiv@divisor+1,f,c
  3187  0008AE  3259               	rrcf	___lwdiv@divisor,f,c
  3188  0008B0  2E5B               	decfsz	___lwdiv@counter,f,c
  3189  0008B2  D7ED               	goto	l1898
  3190  0008B4                     l859:
  3191  0008B4  C05C  F057         	movff	___lwdiv@quotient,?___lwdiv
  3192  0008B8  C05D  F058         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3193  0008BC  0012               	return		;funcret
  3194  0008BE                     __end_of___lwdiv:
  3195                           	opt stack 0
  3196                           tblptru	equ	0xFF8
  3197                           prodh	equ	0xFF4
  3198                           prodl	equ	0xFF3
  3199                           intcon	equ	0xFF2
  3200                           intcon2	equ	0xFF1
  3201                           postinc0	equ	0xFEE
  3202                           wreg	equ	0xFE8
  3203                           postinc1	equ	0xFE6
  3204                           postdec1	equ	0xFE5
  3205                           fsr1h	equ	0xFE2
  3206                           fsr1l	equ	0xFE1
  3207                           postinc2	equ	0xFDE
  3208                           postdec2	equ	0xFDD
  3209                           fsr2h	equ	0xFDA
  3210                           fsr2l	equ	0xFD9
  3211                           status	equ	0xFD8
  3212                           
  3213 ;; *************** function _AD_Converter *****************
  3214 ;; Defined at:
  3215 ;;		line 264 in file "WAFR-01-C001 HD-debug.X/sys/system.c"
  3216 ;; Parameters:    Size  Location     Type
  3217 ;;  channelNumbe    1    wreg     char 
  3218 ;; Auto vars:     Size  Location     Type
  3219 ;;  channelNumbe    1   28[COMRAM] char 
  3220 ;;  AD_Result       2   29[COMRAM] unsigned short 
  3221 ;; Return value:  Size  Location     Type
  3222 ;;                  2   24[COMRAM] unsigned short 
  3223 ;; Registers used:
  3224 ;;		wreg, status,2, status,0, cstack
  3225 ;; Tracked objects:
  3226 ;;		On entry : 0/0
  3227 ;;		On exit  : 0/0
  3228 ;;		Unchanged: 0/0
  3229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3230 ;;      Params:         2       0       0       0
  3231 ;;      Locals:         3       0       0       0
  3232 ;;      Temps:          2       0       0       0
  3233 ;;      Totals:         7       0       0       0
  3234 ;;Total ram usage:        7 bytes
  3235 ;; Hardware stack levels used:    1
  3236 ;; Hardware stack levels required when called:    2
  3237 ;; This function calls:
  3238 ;;		_delay_10us
  3239 ;; This function is called by:
  3240 ;;		_GetAdcBatValue
  3241 ;;		_GetAdcAD597Value
  3242 ;; This function uses a non-reentrant model
  3243 ;;
  3244                           
  3245                           	psect	text19
  3246  00094A                     __ptext19:
  3247                           	opt stack 0
  3248  00094A                     _AD_Converter:
  3249                           	opt stack 26
  3250                           
  3251                           ;incstack = 0
  3252                           ;AD_Converter@channelNumber stored from wreg
  3253  00094A  6E5D               	movwf	AD_Converter@channelNumber,c
  3254                           
  3255                           ;system.c: 266: uint16 AD_Result ;
  3256                           ;system.c: 276: ADCON0 = ((channelNumber & 0x07) << 2) | 0x01;
  3257  00094C  C05D  F05B         	movff	AD_Converter@channelNumber,??_AD_Converter
  3258  000950  0E07               	movlw	7
  3259  000952  165B               	andwf	??_AD_Converter,f,c
  3260  000954  90D8               	bcf	status,0,c
  3261  000956  365B               	rlcf	??_AD_Converter,f,c
  3262  000958  90D8               	bcf	status,0,c
  3263  00095A  345B               	rlcf	??_AD_Converter,w,c
  3264  00095C  0901               	iorlw	1
  3265  00095E  6EC2               	movwf	4034,c	;volatile
  3266                           
  3267                           ;system.c: 281: delay_10us() ;
  3268  000960  EC1A  F005         	call	_delay_10us	;wreg free
  3269                           
  3270                           ;system.c: 282: delay_10us() ;
  3271  000964  EC1A  F005         	call	_delay_10us	;wreg free
  3272                           
  3273                           ;system.c: 284: ADCON0bits.GO = 1;
  3274  000968  82C2               	bsf	4034,1,c	;volatile
  3275  00096A                     l215:
  3276  00096A  B2C2               	btfsc	4034,1,c	;volatile
  3277  00096C  D7FE               	goto	l215
  3278                           
  3279                           ;system.c: 288: PIR1bits.ADIF = 0 ;
  3280  00096E  9C9E               	bcf	3998,6,c	;volatile
  3281                           
  3282                           ;system.c: 290: AD_Result =( ADRESH << 8 ) | ADRESL ;
  3283  000970  50C3               	movf	4035,w,c	;volatile
  3284  000972  CFC4 F05B          	movff	4036,??_AD_Converter	;volatile
  3285  000976  6A5C               	clrf	(??_AD_Converter+1)& (0+255),c
  3286  000978  C05B  F05C         	movff	??_AD_Converter,??_AD_Converter+1
  3287  00097C  6A5B               	clrf	??_AD_Converter,c
  3288  00097E  105B               	iorwf	??_AD_Converter,w,c
  3289  000980  6E5E               	movwf	AD_Converter@AD_Result,c
  3290  000982  505C               	movf	??_AD_Converter+1,w,c
  3291  000984  6E5F               	movwf	AD_Converter@AD_Result+1,c
  3292                           
  3293                           ;system.c: 292: return (AD_Result);
  3294  000986  C05E  F059         	movff	AD_Converter@AD_Result,?_AD_Converter
  3295  00098A  C05F  F05A         	movff	AD_Converter@AD_Result+1,?_AD_Converter+1
  3296  00098E  0012               	return	
  3297  000990                     __end_of_AD_Converter:
  3298                           	opt stack 0
  3299                           tblptru	equ	0xFF8
  3300                           prodh	equ	0xFF4
  3301                           prodl	equ	0xFF3
  3302                           intcon	equ	0xFF2
  3303                           intcon2	equ	0xFF1
  3304                           postinc0	equ	0xFEE
  3305                           wreg	equ	0xFE8
  3306                           postinc1	equ	0xFE6
  3307                           postdec1	equ	0xFE5
  3308                           fsr1h	equ	0xFE2
  3309                           fsr1l	equ	0xFE1
  3310                           postinc2	equ	0xFDE
  3311                           postdec2	equ	0xFDD
  3312                           fsr2h	equ	0xFDA
  3313                           fsr2l	equ	0xFD9
  3314                           status	equ	0xFD8
  3315                           
  3316 ;; *************** function _delay_10us *****************
  3317 ;; Defined at:
  3318 ;;		line 54 in file "WAFR-01-C001 HD-debug.X/user/user.c"
  3319 ;; Parameters:    Size  Location     Type
  3320 ;;		None
  3321 ;; Auto vars:     Size  Location     Type
  3322 ;;  i               2   22[COMRAM] unsigned int 
  3323 ;; Return value:  Size  Location     Type
  3324 ;;		None               void
  3325 ;; Registers used:
  3326 ;;		wreg, status,2, status,0
  3327 ;; Tracked objects:
  3328 ;;		On entry : 0/0
  3329 ;;		On exit  : 0/0
  3330 ;;		Unchanged: 0/0
  3331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3332 ;;      Params:         0       0       0       0
  3333 ;;      Locals:         2       0       0       0
  3334 ;;      Temps:          0       0       0       0
  3335 ;;      Totals:         2       0       0       0
  3336 ;;Total ram usage:        2 bytes
  3337 ;; Hardware stack levels used:    1
  3338 ;; Hardware stack levels required when called:    1
  3339 ;; This function calls:
  3340 ;;		Nothing
  3341 ;; This function is called by:
  3342 ;;		_AD_Converter
  3343 ;; This function uses a non-reentrant model
  3344 ;;
  3345                           
  3346                           	psect	text20
  3347  000A34                     __ptext20:
  3348                           	opt stack 0
  3349  000A34                     _delay_10us:
  3350                           	opt stack 26
  3351                           
  3352                           ;user.c: 56: unsigned int i;
  3353                           ;user.c: 57: for (i=0; i<4; i++);
  3354                           
  3355                           ;incstack = 0
  3356  000A34  0E00               	movlw	0
  3357  000A36  6E58               	movwf	delay_10us@i+1,c
  3358  000A38  0E00               	movlw	0
  3359  000A3A  6E57               	movwf	delay_10us@i,c
  3360  000A3C                     l1862:
  3361  000A3C  5058               	movf	delay_10us@i+1,w,c
  3362  000A3E  E107               	bnz	l120
  3363  000A40  0E04               	movlw	4
  3364  000A42  5C57               	subwf	delay_10us@i,w,c
  3365  000A44  B0D8               	btfsc	status,0,c
  3366  000A46  0012               	return	
  3367  000A48  4A57               	infsnz	delay_10us@i,f,c
  3368  000A4A  2A58               	incf	delay_10us@i+1,f,c
  3369  000A4C  D7F7               	goto	l1862
  3370  000A4E                     l120:
  3371  000A4E  0012               	return		;funcret
  3372  000A50                     __end_of_delay_10us:
  3373                           	opt stack 0
  3374                           tblptru	equ	0xFF8
  3375                           prodh	equ	0xFF4
  3376                           prodl	equ	0xFF3
  3377                           intcon	equ	0xFF2
  3378                           intcon2	equ	0xFF1
  3379                           postinc0	equ	0xFEE
  3380                           wreg	equ	0xFE8
  3381                           postinc1	equ	0xFE6
  3382                           postdec1	equ	0xFE5
  3383                           fsr1h	equ	0xFE2
  3384                           fsr1l	equ	0xFE1
  3385                           postinc2	equ	0xFDE
  3386                           postdec2	equ	0xFDD
  3387                           fsr2h	equ	0xFDA
  3388                           fsr2l	equ	0xFD9
  3389                           status	equ	0xFD8
  3390                           
  3391 ;; *************** function _ISR *****************
  3392 ;; Defined at:
  3393 ;;		line 22 in file "WAFR-01-C001 HD-debug.X/interrupts/interrupts.c"
  3394 ;; Parameters:    Size  Location     Type
  3395 ;;		None
  3396 ;; Auto vars:     Size  Location     Type
  3397 ;;		None
  3398 ;; Return value:  Size  Location     Type
  3399 ;;		None               void
  3400 ;; Registers used:
  3401 ;;		wreg, status,2, status,0
  3402 ;; Tracked objects:
  3403 ;;		On entry : 0/0
  3404 ;;		On exit  : 0/0
  3405 ;;		Unchanged: 0/0
  3406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3407 ;;      Params:         0       0       0       0
  3408 ;;      Locals:         0       0       0       0
  3409 ;;      Temps:         22       0       0       0
  3410 ;;      Totals:        22       0       0       0
  3411 ;;Total ram usage:       22 bytes
  3412 ;; Hardware stack levels used:    1
  3413 ;; This function calls:
  3414 ;;		Nothing
  3415 ;; This function is called by:
  3416 ;;		Interrupt level 2
  3417 ;; This function uses a non-reentrant model
  3418 ;;
  3419                           
  3420                           	psect	intcode
  3421  000008                     __pintcode:
  3422                           	opt stack 0
  3423  000008                     _ISR:
  3424                           	opt stack 26
  3425                           
  3426                           ;incstack = 0
  3427  000008  8269               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3428  00000A  CFFA F049          	movff	pclath,??_ISR+8
  3429  00000E  CFFB F04A          	movff	pclatu,??_ISR+9
  3430  000012  ED4D  F002         	call	int_func,f	;refresh shadow registers
  3431                           pclatu	equ	0xFFB
  3432                           pclath	equ	0xFFA
  3433                           tblptru	equ	0xFF8
  3434                           prodh	equ	0xFF4
  3435                           prodl	equ	0xFF3
  3436                           intcon	equ	0xFF2
  3437                           intcon2	equ	0xFF1
  3438                           postinc0	equ	0xFEE
  3439                           wreg	equ	0xFE8
  3440                           postinc1	equ	0xFE6
  3441                           postdec1	equ	0xFE5
  3442                           fsr1h	equ	0xFE2
  3443                           fsr1l	equ	0xFE1
  3444                           postinc2	equ	0xFDE
  3445                           postdec2	equ	0xFDD
  3446                           fsr2h	equ	0xFDA
  3447                           fsr2l	equ	0xFD9
  3448                           status	equ	0xFD8
  3449                           
  3450                           	psect	intcode_body
  3451  00049A                     __pintcode_body:
  3452                           	opt stack 26
  3453  00049A                     int_func:
  3454                           	opt stack 26
  3455  00049A  0006               	pop		; remove dummy address from shadow register refresh
  3456  00049C  CFE9 F04B          	movff	fsr0l,??_ISR+10
  3457  0004A0  CFEA F04C          	movff	fsr0h,??_ISR+11
  3458  0004A4  CFE1 F04D          	movff	fsr1l,??_ISR+12
  3459  0004A8  CFE2 F04E          	movff	fsr1h,??_ISR+13
  3460  0004AC  CFD9 F04F          	movff	fsr2l,??_ISR+14
  3461  0004B0  CFDA F050          	movff	fsr2h,??_ISR+15
  3462  0004B4  CFF3 F051          	movff	prodl,??_ISR+16
  3463  0004B8  CFF4 F052          	movff	prodh,??_ISR+17
  3464  0004BC  CFF6 F053          	movff	tblptrl,??_ISR+18
  3465  0004C0  CFF7 F054          	movff	tblptrh,??_ISR+19
  3466  0004C4  CFF8 F055          	movff	tblptru,??_ISR+20
  3467  0004C8  CFF5 F056          	movff	tablat,??_ISR+21
  3468                           
  3469                           ;interrupts.c: 26: if ( INTCONbits.TMR0IE && INTCONbits.TMR0IF)
  3470  0004CC  BAF2               	btfsc	intcon,5,c	;volatile
  3471  0004CE  A4F2               	btfss	intcon,2,c	;volatile
  3472  0004D0  D014               	goto	i2l1524
  3473                           
  3474                           ;interrupts.c: 27: {
  3475                           ;interrupts.c: 28: INTCONbits.TMR0IF = 0;
  3476  0004D2  94F2               	bcf	intcon,2,c	;volatile
  3477                           
  3478                           ;interrupts.c: 29: timer0Count++ ;
  3479  0004D4  2A3F               	incf	_timer0Count,f,c
  3480                           
  3481                           ;interrupts.c: 30: timeSystemRun++ ;
  3482  0004D6  0E01               	movlw	1
  3483  0004D8  2635               	addwf	_timeSystemRun,f,c
  3484  0004DA  0E00               	movlw	0
  3485  0004DC  2236               	addwfc	_timeSystemRun+1,f,c
  3486  0004DE  2237               	addwfc	_timeSystemRun+2,f,c
  3487  0004E0  2238               	addwfc	_timeSystemRun+3,f,c
  3488                           
  3489                           ;interrupts.c: 32: if (timer0Count == 50)
  3490  0004E2  0E32               	movlw	50
  3491  0004E4  183F               	xorwf	_timer0Count,w,c
  3492  0004E6  A4D8               	btfss	status,2,c
  3493  0004E8  D004               	goto	i2l1520
  3494                           
  3495                           ;interrupts.c: 33: {
  3496                           ;interrupts.c: 34: timer0Count = 0 ;
  3497  0004EA  0E00               	movlw	0
  3498  0004EC  6E3F               	movwf	_timer0Count,c
  3499                           
  3500                           ;interrupts.c: 35: timerHalfSecond ++ ;
  3501  0004EE  4A39               	infsnz	_timerHalfSecond,f,c
  3502  0004F0  2A3A               	incf	_timerHalfSecond+1,f,c
  3503  0004F2                     i2l1520:
  3504                           
  3505                           ;interrupts.c: 36: }
  3506                           ;interrupts.c: 38: TMR0H = (65536-40000)/256;
  3507  0004F2  0E63               	movlw	99
  3508  0004F4  6ED7               	movwf	4055,c	;volatile
  3509                           
  3510                           ;interrupts.c: 39: TMR0L = (65536-40000)%256 ;
  3511  0004F6  0EC0               	movlw	192
  3512  0004F8  6ED6               	movwf	4054,c	;volatile
  3513  0004FA                     i2l1524:
  3514                           
  3515                           ;interrupts.c: 40: }
  3516                           ;interrupts.c: 44: if ( INTCONbits.INT0IF && INTCONbits.INT0IE )
  3517  0004FA  B2F2               	btfsc	intcon,1,c	;volatile
  3518  0004FC  A8F2               	btfss	intcon,4,c	;volatile
  3519  0004FE  D043               	goto	i2l309
  3520                           
  3521                           ;interrupts.c: 45: {
  3522                           ;interrupts.c: 46: INTCONbits.INT0IF = 0 ;
  3523  000500  92F2               	bcf	intcon,1,c	;volatile
  3524                           
  3525                           ;interrupts.c: 49: if ( (timeSystemRun - pushButtonJitterTime) < 2 ){
  3526  000502  C031  F041         	movff	_pushButtonJitterTime,??_ISR
  3527  000506  C032  F042         	movff	_pushButtonJitterTime+1,??_ISR+1
  3528  00050A  C033  F043         	movff	_pushButtonJitterTime+2,??_ISR+2
  3529  00050E  C034  F044         	movff	_pushButtonJitterTime+3,??_ISR+3
  3530  000512  1E41               	comf	??_ISR,f,c
  3531  000514  1E42               	comf	??_ISR+1,f,c
  3532  000516  1E43               	comf	??_ISR+2,f,c
  3533  000518  1E44               	comf	??_ISR+3,f,c
  3534  00051A  2A41               	incf	??_ISR,f,c
  3535  00051C  0E00               	movlw	0
  3536  00051E  2242               	addwfc	??_ISR+1,f,c
  3537  000520  2243               	addwfc	??_ISR+2,f,c
  3538  000522  2244               	addwfc	??_ISR+3,f,c
  3539  000524  5035               	movf	_timeSystemRun,w,c
  3540  000526  2441               	addwf	??_ISR,w,c
  3541  000528  6E45               	movwf	(??_ISR+4)& (0+255),c
  3542  00052A  5036               	movf	_timeSystemRun+1,w,c
  3543  00052C  2042               	addwfc	??_ISR+1,w,c
  3544  00052E  6E46               	movwf	(??_ISR+5)& (0+255),c
  3545  000530  5037               	movf	_timeSystemRun+2,w,c
  3546  000532  2043               	addwfc	??_ISR+2,w,c
  3547  000534  6E47               	movwf	(??_ISR+6)& (0+255),c
  3548  000536  5038               	movf	_timeSystemRun+3,w,c
  3549  000538  2044               	addwfc	??_ISR+3,w,c
  3550  00053A  6E48               	movwf	(??_ISR+7)& (0+255),c
  3551  00053C  5048               	movf	??_ISR+7,w,c
  3552  00053E  1047               	iorwf	??_ISR+6,w,c
  3553  000540  1046               	iorwf	??_ISR+5,w,c
  3554  000542  E104               	bnz	i2l305
  3555  000544  0E02               	movlw	2
  3556  000546  5C45               	subwf	??_ISR+4,w,c
  3557  000548  A0D8               	btfss	status,0,c
  3558  00054A  D01D               	goto	i2l309
  3559  00054C                     i2l305:
  3560                           
  3561                           ;interrupts.c: 52: if ( !PORTBbits.RB0 )
  3562  00054C  B081               	btfsc	3969,0,c	;volatile
  3563  00054E  D006               	goto	i2l307
  3564                           
  3565                           ;interrupts.c: 53: {
  3566                           ;interrupts.c: 54: INTCON2bits.INTEDG0 = 1 ;
  3567  000550  8CF1               	bsf	intcon2,6,c	;volatile
  3568                           
  3569                           ;interrupts.c: 56: timerHalfSecond = 0 ;
  3570  000552  0E00               	movlw	0
  3571  000554  6E3A               	movwf	_timerHalfSecond+1,c
  3572  000556  0E00               	movlw	0
  3573  000558  6E39               	movwf	_timerHalfSecond,c
  3574                           
  3575                           ;interrupts.c: 57: }else
  3576  00055A  D00D               	goto	i2l1542
  3577  00055C                     i2l307:
  3578                           
  3579                           ;interrupts.c: 58: {
  3580                           ;interrupts.c: 59: INTCON2bits.INTEDG0 = 0 ;
  3581  00055C  9CF1               	bcf	intcon2,6,c	;volatile
  3582                           
  3583                           ;interrupts.c: 61: S2KeyPushTime = timerHalfSecond;
  3584  00055E  C039  F03B         	movff	_timerHalfSecond,_S2KeyPushTime
  3585                           
  3586                           ;interrupts.c: 62: flagS2KeyPushed = 1 ;
  3587  000562  0E01               	movlw	1
  3588  000564  6E3D               	movwf	_flagS2KeyPushed,c
  3589                           
  3590                           ;interrupts.c: 64: buttonPushTimeStop = timeSystemRun ;
  3591  000566  C035  F02D         	movff	_timeSystemRun,_buttonPushTimeStop
  3592  00056A  C036  F02E         	movff	_timeSystemRun+1,_buttonPushTimeStop+1
  3593  00056E  C037  F02F         	movff	_timeSystemRun+2,_buttonPushTimeStop+2
  3594  000572  C038  F030         	movff	_timeSystemRun+3,_buttonPushTimeStop+3
  3595  000576                     i2l1542:
  3596                           
  3597                           ;interrupts.c: 66: }
  3598                           ;interrupts.c: 67: pushButtonJitterTime = timeSystemRun ;
  3599  000576  C035  F031         	movff	_timeSystemRun,_pushButtonJitterTime
  3600  00057A  C036  F032         	movff	_timeSystemRun+1,_pushButtonJitterTime+1
  3601  00057E  C037  F033         	movff	_timeSystemRun+2,_pushButtonJitterTime+2
  3602  000582  C038  F034         	movff	_timeSystemRun+3,_pushButtonJitterTime+3
  3603  000586                     i2l309:
  3604  000586  C056  FFF5         	movff	??_ISR+21,tablat
  3605  00058A  C055  FFF8         	movff	??_ISR+20,tblptru
  3606  00058E  C054  FFF7         	movff	??_ISR+19,tblptrh
  3607  000592  C053  FFF6         	movff	??_ISR+18,tblptrl
  3608  000596  C052  FFF4         	movff	??_ISR+17,prodh
  3609  00059A  C051  FFF3         	movff	??_ISR+16,prodl
  3610  00059E  C050  FFDA         	movff	??_ISR+15,fsr2h
  3611  0005A2  C04F  FFD9         	movff	??_ISR+14,fsr2l
  3612  0005A6  C04E  FFE2         	movff	??_ISR+13,fsr1h
  3613  0005AA  C04D  FFE1         	movff	??_ISR+12,fsr1l
  3614  0005AE  C04C  FFEA         	movff	??_ISR+11,fsr0h
  3615  0005B2  C04B  FFE9         	movff	??_ISR+10,fsr0l
  3616  0005B6  C04A  FFFB         	movff	??_ISR+9,pclatu
  3617  0005BA  C049  FFFA         	movff	??_ISR+8,pclath
  3618  0005BE  9269               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3619  0005C0  0011               	retfie		f
  3620  0005C2                     __end_of_ISR:
  3621                           	opt stack 0
  3622  0000                     pclatu	equ	0xFFB
  3623                           pclath	equ	0xFFA
  3624                           tblptru	equ	0xFF8
  3625                           tblptrh	equ	0xFF7
  3626                           tblptrl	equ	0xFF6
  3627                           tablat	equ	0xFF5
  3628                           prodh	equ	0xFF4
  3629                           prodl	equ	0xFF3
  3630                           intcon	equ	0xFF2
  3631                           intcon2	equ	0xFF1
  3632                           postinc0	equ	0xFEE
  3633                           fsr0h	equ	0xFEA
  3634                           fsr0l	equ	0xFE9
  3635                           wreg	equ	0xFE8
  3636                           postinc1	equ	0xFE6
  3637                           postdec1	equ	0xFE5
  3638                           fsr1h	equ	0xFE2
  3639                           fsr1l	equ	0xFE1
  3640                           postinc2	equ	0xFDE
  3641                           postdec2	equ	0xFDD
  3642                           fsr2h	equ	0xFDA
  3643                           fsr2l	equ	0xFD9
  3644                           status	equ	0xFD8
  3645                           pclatu	equ	0xFFB
  3646                           pclath	equ	0xFFA
  3647                           tblptru	equ	0xFF8
  3648                           tblptrh	equ	0xFF7
  3649                           tblptrl	equ	0xFF6
  3650                           tablat	equ	0xFF5
  3651                           prodh	equ	0xFF4
  3652                           prodl	equ	0xFF3
  3653                           intcon	equ	0xFF2
  3654                           intcon2	equ	0xFF1
  3655                           postinc0	equ	0xFEE
  3656                           fsr0h	equ	0xFEA
  3657                           fsr0l	equ	0xFE9
  3658                           wreg	equ	0xFE8
  3659                           postinc1	equ	0xFE6
  3660                           postdec1	equ	0xFE5
  3661                           fsr1h	equ	0xFE2
  3662                           fsr1l	equ	0xFE1
  3663                           postinc2	equ	0xFDE
  3664                           postdec2	equ	0xFDD
  3665                           fsr2h	equ	0xFDA
  3666                           fsr2l	equ	0xFD9
  3667                           status	equ	0xFD8
  3668                           
  3669                           	psect	rparam
  3670  0000                     pclatu	equ	0xFFB
  3671                           pclath	equ	0xFFA
  3672                           tblptru	equ	0xFF8
  3673                           tblptrh	equ	0xFF7
  3674                           tblptrl	equ	0xFF6
  3675                           tablat	equ	0xFF5
  3676                           prodh	equ	0xFF4
  3677                           prodl	equ	0xFF3
  3678                           intcon	equ	0xFF2
  3679                           intcon2	equ	0xFF1
  3680                           postinc0	equ	0xFEE
  3681                           fsr0h	equ	0xFEA
  3682                           fsr0l	equ	0xFE9
  3683                           wreg	equ	0xFE8
  3684                           postinc1	equ	0xFE6
  3685                           postdec1	equ	0xFE5
  3686                           fsr1h	equ	0xFE2
  3687                           fsr1l	equ	0xFE1
  3688                           postinc2	equ	0xFDE
  3689                           postdec2	equ	0xFDD
  3690                           fsr2h	equ	0xFDA
  3691                           fsr2l	equ	0xFD9
  3692                           status	equ	0xFD8
  3693                           
  3694                           	psect	temp
  3695  000069                     btemp:
  3696                           	opt stack 0
  3697  000069                     	ds	1
  3698  0000                     int$flags	set	btemp
  3699                           pclatu	equ	0xFFB
  3700                           pclath	equ	0xFFA
  3701                           tblptru	equ	0xFF8
  3702                           tblptrh	equ	0xFF7
  3703                           tblptrl	equ	0xFF6
  3704                           tablat	equ	0xFF5
  3705                           prodh	equ	0xFF4
  3706                           prodl	equ	0xFF3
  3707                           intcon	equ	0xFF2
  3708                           intcon2	equ	0xFF1
  3709                           postinc0	equ	0xFEE
  3710                           fsr0h	equ	0xFEA
  3711                           fsr0l	equ	0xFE9
  3712                           wreg	equ	0xFE8
  3713                           postinc1	equ	0xFE6
  3714                           postdec1	equ	0xFE5
  3715                           fsr1h	equ	0xFE2
  3716                           fsr1l	equ	0xFE1
  3717                           postinc2	equ	0xFDE
  3718                           postdec2	equ	0xFDD
  3719                           fsr2h	equ	0xFDA
  3720                           fsr2l	equ	0xFD9
  3721                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         64
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     40     104
    BANK0           128     21      21
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_GetAdcBatValue
    _ShutDownSystem->_delay_ms
    _ProcessHeat->_GetAdcAD597Value
    _GetAdcAD597Value->_AD_Converter
    _GetAdcBatValue->_AD_Converter
    _AD_Converter->_delay_10us

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_ProcessHeat

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                11     6      5    3434
                                             39 COMRAM     1     1      0
                                             11 BANK0     10     5      5
                     _GetAdcBatValue
                       _InitializeAD
                     _InitializeINT0
               _InitializeInterrupts
               _InitializeOscillator
                   _InitializePinmux
                   _InitializeTimer0
                    _LevelTmpSetShow
                      _ProcessButton
                        _ProcessHeat
                         _ReadEEprom
                     _ShutDownSystem
                           _delay_ms
                      _turnOffAllLed
 ---------------------------------------------------------------------------------
 (1) _ShutDownSystem                                       1     1      0     406
                                             28 COMRAM     1     1      0
                           _delay_ms
                      _turnOffAllLed
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             6     4      2     406
                                             22 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _ProcessHeat                                         11    11      0    1386
                                              0 BANK0     11    11      0
                   _GetAdcAD597Value
                 _HeatProcessLedShow
                         _ReadEEprom
                        _WriteEEprom
                      _turnOffAllLed
 ---------------------------------------------------------------------------------
 (2) _WriteEEprom                                          2     1      1     116
                                             22 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _ReadEEprom                                           1     1      0      22
                                             22 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _HeatProcessLedShow                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _GetAdcAD597Value                                     8     6      2     865
                                             31 COMRAM     8     6      2
                       _AD_Converter
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (1) _ProcessButton                                        8     8      0      24
                                             22 COMRAM     8     8      0
                    _LevelTmpSetShow
 ---------------------------------------------------------------------------------
 (2) _LevelTmpSetShow                                      0     0      0       0
                      _turnOffAllLed
 ---------------------------------------------------------------------------------
 (1) _turnOffAllLed                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitializeTimer0                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitializePinmux                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitializeOscillator                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitializeInterrupts                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitializeINT0                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitializeAD                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GetAdcBatValue                                       8     6      2     896
                                             31 COMRAM     8     6      2
                       _AD_Converter
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     457
                                             22 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (3) _AD_Converter                                         7     5      2     111
                                             24 COMRAM     7     5      2
                         _delay_10us
 ---------------------------------------------------------------------------------
 (4) _delay_10us                                           2     2      0      46
                                             22 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                 22    22      0       0
                                              0 COMRAM    22    22      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _GetAdcBatValue
     _AD_Converter
       _delay_10us
     ___lwdiv
   _InitializeAD
   _InitializeINT0
   _InitializeInterrupts
   _InitializeOscillator
   _InitializePinmux
   _InitializeTimer0
   _LevelTmpSetShow
     _turnOffAllLed
   _ProcessButton
     _LevelTmpSetShow
       _turnOffAllLed
   _ProcessHeat
     _GetAdcAD597Value
       _AD_Converter
         _delay_10us
       ___lwdiv
     _HeatProcessLedShow
     _ReadEEprom
     _WriteEEprom
     _turnOffAllLed
   _ReadEEprom
   _ShutDownSystem
     _delay_ms
     _turnOffAllLed
   _delay_ms
   _turnOffAllLed

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     15      15       5       16.4%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     28      68       1       82.5%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      7D       3        0.0%
DATA                 0      0      7D      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Thu Oct 08 11:59:22 2015

           _buttonPushTimeStop 002D                    __CFG_CP0$ON 000000                    __CFG_CP1$ON 000000  
         __size_of_WriteEEprom 0028            _buttonPushTimeStart 0029                             l70 0404  
                           l67 0424                    __CFG_CPB$ON 000000                    __CFG_CPD$ON 000000  
                  __CFG_BORV$3 000000                    __CFG_OSC$HS 000000                            l120 0A4E  
                          l215 096A                            l232 029A                            l253 0234  
                          l246 019C                            l238 0106                            l345 0A84  
                          l450 0628                            l338 09C8                            l453 0666  
                          l391 090A                            l393 0912                            l394 0920  
                          l859 08B4                            _ISR 0008                            prod 000FF3  
                          wreg 000FE8                   __CFG_LVP$OFF 000000                           ?_ISR 0041  
                 __CFG_WDT$OFF 000000                           l2000 0746                           l2010 0794  
                         l2100 0652                           l2020 07B8                           l2014 079C  
                         l2006 0782                           l2200 0290                           l2050 0694  
                         l2106 065E                           l2060 06E2                           l2070 0712  
                         l2046 068C                           l2118 067A                           l2150 00E4  
                         l2142 00BA                           l2134 005A                           l2206 08C2  
                         l2064 06EA                           l2056 06D0                           l2232 02FC  
                         l2138 00A6                           l2092 0636                           l2156 0108  
                         l2260 03E8                           l2236 031C                           l2228 02C0  
                         l2174 019E                           l2158 014E                           l2246 0370  
                         l2088 0632                           l2176 01E4                           l2168 017A  
                         l2256 03C8                           l2248 0392                           l2194 0236  
                         l2282 045C                           l2274 0436                           l2188 0212  
                         l2292 0476                           l2284 0460                           l2276 0448  
                         l2198 027C                           l2286 046A                           l2294 048C  
                         l1912 099A                           l2288 0470                           l1906 08AA  
                         l1922 09B4                           l1914 09A2                           l1932 0A90  
                         l1924 09B8                           l1862 0A3C                           l1960 07D8  
                         l1938 0934                           l1970 07FE                           l1980 0828  
                         l1964 07E4                           l1894 0882                           l1974 080C  
                         l1958 09E6                           l1896 088A                           l1984 0838  
                         l1968 07F4                           l1992 0856                           l1898 088E  
                         l1978 081E                           l1996 073E                           l1988 084C  
                         u1600 01F4                           u1610 0230                           u1540 00CA  
                         u1700 02E0                           u1550 0102                           u1640 08CE  
                         u1570 015E                           u1580 0198                           u1660 08E8  
                         u1718 02E2                           u1680 02CA                           u1658 08D0  
                         u1678 08EA                           u1698 02CC                   __CFG_PWRT$ON 000000  
                 __CFG_WRT0$ON 000000                   __CFG_WRT1$ON 000000                  __CFG_EBTR0$ON 000000  
                __CFG_EBTR1$ON 000000                   __CFG_WRTB$ON 000000                   __CFG_WRTC$ON 000000  
                 __CFG_WRTD$ON 000000                  __CFG_EBTRB$ON 000000                           _main 029E  
                         fsr0h 000FEA                           fsr1h 000FE2                           fsr0l 000FE9  
                         fsr2h 000FDA                           fsr1l 000FE1                           fsr2l 000FD9  
                         btemp 0069                           pclat 000FFA                   main@adcValue 0091  
                         prodh 000FF4                           prodl 000FF3                           start 0016  
                __CFG_IESO$OFF 000000                  __CFG_MCLRE$ON 000000                   ___param_bank 000010  
__size_of_InitializeInterrupts 0008                          ??_ISR 0041                          ?_main 008B  
                        _EEADR 000FA9                __end_of___lwdiv 08BE                          i2l305 054C  
                        i2l307 055C                          i2l309 0586                   main@keyValue 0090  
                        _TMR0H 000FD7                          _TMR0L 000FD6                          _PORTC 000F82  
               __CFG_FCMEN$OFF 000000  GetAdcAD597Value@channelNumber 0064  __size_of_InitializeOscillator 0002  
         __end_of_AD_Converter 0990                          main@i 0093                 __CFG_BOREN$OFF 000000  
                        tablat 000FF5                  ?_InitializeAD 0041                          status 000FD8  
                   _ReadEEprom 0A82                __initialization 0A50        __size_of_InitializeINT0 0008  
                 __end_of_main 049A       ProcessHeat@countHeatTime 0085      __size_of_InitializePinmux 0028  
    __size_of_InitializeTimer0 0018                         ??_main 0068                  __activetblptr 000002  
          ProcessHeat@adcValue 0089       __size_of_LevelTmpSetShow 0046                         _ADCON0 000FC2  
                       _ADRESH 000FC4                         _ADRESL 000FC3                         _EEDATA 000FA8  
                       _EECON2 000FA7                 ??_InitializeAD 0057                         i2l1520 04F2  
                       i2l1524 04FA                         i2l1542 0576                WriteEEprom@addr 0058  
              WriteEEprom@data 0057            ProcessHeat@flagStop 0084         __size_of_turnOffAllLed 0008  
           GetAdcBatValue@temp 0065               __end_of_delay_ms 09C6                 __CFG_XINST$OFF 000000  
  __size_of_HeatProcessLedShow 0096                 __CFG_STVREN$ON 000000                         _cyData 003C  
             ??_GetAdcBatValue 0062                      ??___lwdiv 005B                         clear_0 0A56  
    AD_Converter@channelNumber 005D                  _S2KeyPushTime 003B       __end_of_GetAdcAD597Value 07D6  
                       tblptrh 000FF7                         tblptrl 000FF6                  ??_ProcessHeat 0080  
                       tblptru 000FF8                _levelTmpSetting 003E                     __accesstop 0080  
      __end_of__initialization 0A5C                __CFG_PBADEN$OFF 000000                    ?_ReadEEprom 0041  
      __size_of_ShutDownSystem 0046                  ___rparam_used 000001                 __pcstackCOMRAM 0041  
  GetAdcBatValue@channelNumber 0064          __end_of_ProcessButton 067E                _timerHalfSecond 0039  
                _turnOffAllLed 0A98          __size_of_AD_Converter 0046              GetAdcAD597Value@i 0067  
          __end_of_ProcessHeat 029E                     _delay_10us 0A34              ??_LevelTmpSetShow 0057  
                ??_WriteEEprom 0058                 _InitializeINT0 0AA8                   _AD_Converter 094A  
         __end_of_InitializeAD 0A34               _InitializePinmux 09EE               _InitializeTimer0 0A6A  
               ?_turnOffAllLed 0041                _flagS2KeyPushed 003D            __size_of_ReadEEprom 0016  
                    ?_delay_ms 0057   __end_of_InitializeInterrupts 0AA8         __end_of_InitializeINT0 0AB0  
                      __Hparam 0000           GetAdcAD597Value@temp 0065                        __Lparam 0000  
              GetAdcBatValue@i 0067   __end_of_InitializeOscillator 0AB2                        ___lwdiv 086C  
                      __pcinit 0A50                        __ramtop 0300            __end_of_WriteEEprom 09EE  
                      __ptext0 029E                        __ptext1 08BE                        __ptext2 0990  
                      __ptext3 001A                        __ptext4 09C6                        __ptext5 0A82  
                      __ptext6 07D6                        __ptext7 0730                        __ptext8 05C2  
                      __ptext9 0904                      _T0CONbits 000FD5                   __size_of_ISR 05BA  
                   ??_delay_ms 0059                    _ProcessHeat 001A           _pushButtonJitterTime 0031  
               __pintcode_body 049A           end_of_initialization 0A5C                    ?_delay_10us 0041  
                __Lmediumconst 0000                        int_func 049A                 _ShutDownSystem 08BE  
              ?_InitializeINT0 0041                        postdec1 000FE5                        postdec2 000FDD  
                      postinc0 000FEE                        postinc1 000FE6                        postinc2 000FDE  
                  _adcBatValue 0015                ??_turnOffAllLed 0057                      _PORTBbits 000F81  
                    _PORTCbits 000F82                      _TRISAbits 000F92              ?_GetAdcAD597Value 0060  
                    _TRISBbits 000F93                      _TRISCbits 000F94             ??_GetAdcAD597Value 0062  
       __end_of_ShutDownSystem 0904                   ??_ReadEEprom 0057                 ReadEEprom@addr 0057  
   __end_of_HeatProcessLedShow 086C          __size_of_InitializeAD 001E                    _WriteEEprom 09C6  
         _InitializeInterrupts 0AA0          AD_Converter@AD_Result 005E            __size_of_delay_10us 001C  
          start_initialization 0A50                _LevelTmpSetShow 0904                    __end_of_ISR 05C2  
           __end_of_ReadEEprom 0A98           _InitializeOscillator 0AB0                ?_ShutDownSystem 0041  
     __end_of_InitializePinmux 0A16       __end_of_InitializeTimer0 0A82                   _InitializeAD 0A16  
                _adcAD597Value 0001          ?_InitializeInterrupts 0041               __CFG_LPT1OSC$OFF 000000  
                  __pbssCOMRAM 0001                  __pcstackBANK0 0080        __size_of_GetAdcBatValue 00B2  
        ?_InitializeOscillator 0041              __size_of_delay_ms 0036         __size_of_ProcessButton 00BC  
             ___lwdiv@dividend 0057              __CFG_CCP2MX$PORTC 000000                      __pintcode 0008  
                     ?___lwdiv 0057        __end_of_LevelTmpSetShow 094A                   ?_ProcessHeat 0041  
             ___lwdiv@quotient 005C               ??_InitializeINT0 0057                   ??_delay_10us 0057  
                    delay_ms@i 005B                      delay_ms@j 0059                      delay_ms@x 0057  
       ??_InitializeInterrupts 0057                       _PIR1bits 000F9E               __CFG_WDTPS$32768 000000  
                _ProcessButton 05C2                     _ADCON0bits 000FC2                     _ADCON1bits 000FC1  
                   _ADCON2bits 000FC0             __end_of_delay_10us 0A50         ??_InitializeOscillator 0057  
                  _INTCON2bits 000FF1                     _EECON1bits 000FA6      __size_of_GetAdcAD597Value 00A6  
                     __Hrparam 0000                       __Lrparam 0000                   ?_WriteEEprom 0057  
               ?_ProcessButton 0041               __size_of___lwdiv 0052               ?_LevelTmpSetShow 0041  
        __end_of_turnOffAllLed 0AA0                  _timeSystemRun 0035             _HeatProcessLedShow 07D6  
               _GetAdcBatValue 067E                       _delay_ms 0990               ??_ShutDownSystem 005D  
              ___lwdiv@divisor 0059                ___lwdiv@counter 005B            ?_HeatProcessLedShow 0041  
                     __ptext10 0A98                       __ptext11 0A6A                       __ptext20 0A34  
                     __ptext12 09EE                       __ptext13 0AB0                       __ptext14 0AA0  
                     __ptext15 0AA8                       __ptext16 0A16                       __ptext17 067E  
                     __ptext18 086C                       __ptext19 094A                    delay_10us@i 0057  
            ?_InitializePinmux 0041              ?_InitializeTimer0 0041                  __size_of_main 01FC  
           ??_InitializePinmux 0057             ??_InitializeTimer0 0057  ProcessButton@buttonPushPeriod 005B  
         ??_HeatProcessLedShow 0057                  ?_AD_Converter 0059                       int$flags 0069  
                     main@argc 008B                       main@argv 008D         __end_of_GetAdcBatValue 0730  
                   _INTCONbits 000FF2           __size_of_ProcessHeat 0284                       intlevel2 0000  
              ??_ProcessButton 0057                 ??_AD_Converter 005B                    _timer0Count 003F  
                  _timer1Count 0040                ?_GetAdcBatValue 0060               _GetAdcAD597Value 0730  
